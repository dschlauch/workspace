keepColnames <- combn(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"))
?combn
keepColnames <- outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), sep="_")
keepColnames <- outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_")
keepColnames
keepColnames <- c(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_"))
keepColnames
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
displayColnames
publicationTable <- merged.data.frame[,keepColnames]
colnames(publicationTable) <- displayColnames
head(publicationTable)
round(publicationTable,3)
publicationTable <- merged.data.frame[,c(1,keepColnames)]
merged.data.frame[1:5,1:5]
publicationTable <- cbind(merged.data.frame[,1], merged.data.frame[,c(1,keepColnames)])
publicationTable <- cbind(merged.data.frame[,1], merged.data.frame[,keepColnames])
colnames(publicationTable) <- c('TF',displayColnames)
round(publicationTable,3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
head(publicationTable)
publicationTable <- publicationTable[order(publicationTable[,2]),]
head(publicationTable)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
head(publicationTable)
keepColnames
keepColnames <- c(outer(c("Magnitude","rankMag","dTFI.FDR","limma..logp"),analysisNames, paste, sep="_"))
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
keepColnames
?outher
?outer
"asd"*3
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), each=3)
displayColnames
keepColnames <- c(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_"))
keepColnames
keepColnames <- c(t(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_")))
keepColnames
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
head(publicationTable)
head(as.character(publicationTable))
head(publicationTable)
publicationTable==0
publicationTable==0 <- "<.0001"
publicationTable[publicationTable==0] <- "<.0001"
head(publicationTable)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
head(publicationTable)
publicationTable[publicationTable==0] <- "<.0001"
head(publicationTable)
publicationTable[,'rank']
head(resultTables[[1]])
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma..logp <- exp(-x$limma..logp)
x
})
library(ggplot2)
library(gridExtra)
library(ggExtra)
##################################################################################################################
#  This script takes transition matrix results from multiple datasets and creates tables and plots comparing them.
#  Consolidate different results into single table
##################################################################################################################
# Specify the analysis folders and display names for the analyses
analysisNames <- c("ECLIPSE_bere_bare_55557","LGRC_bere_38678","COPDGene_bere_70856")
displayNames <- c("ECLIPSE","LGRC","COPDGene")
# Find the files for comparison
# Read them in.
# Add within-study rank order for magnitude and significance
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma..logp <- exp(-x$limma..logp)
x
})
head(resultTables[[1]])
resultTables[[1]]$limm
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-x$limma..logp)
x
})
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-x$limma)
x
})
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-(x$limma))
x
})
exp(resultTables[[1]]$limm)
exp(-resultTables[[1]]$limm)
x<-resultTables[[1]]
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
resultTables <- lapply(filenames, read.csv)
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-(x$limma))
x
})
exp(-resultTables[[1]]$limm)
x<-resultTables[[1]]
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-(x$limma))
x$limma
colnames(x)
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
x$limma <- exp(-(x$limma))
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x
})
merged.data.frame = Reduce(function(...) merge(..., by=1,all=T), resultTables)
merged.data.frame <- merged.data.frame[order(merged.data.frame[,2]),]
# Function for generation of a plot based on an index pair
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
# Include labels for any TFs that are in the top 15 of any list
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(0,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
ggMarginal(plot1)
}
# Create the 3 comparison plots for ECLIPSE, LGRC, COPDGene and combine them
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
# Generate the png for the above plots
png('eclipse_copdgene_lgrc_comparison.png', width=1800)
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
dev.off()
# Create table
keepColnames <- c(t(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_")))
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
publicationTable[publicationTable==0] <- "<.0001"
head(publicationTable)
plot1 <- makeComparisonPlot(c(1,2))
plot1
plot2 <- makeComparisonPlot(c(2,3))
plot2
plotTopNTFs=15
filterColIndices = c(8,15,22)
pair <-2:3
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
includedLabels
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
merged.data.frame$labels
head(filterColIndices)
colnames(merged.data.frame)
source('~/.active-rstudio-document')
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
library(knitr)
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
file.edit(“.Rprofile”)
file.edit(".Rprofile")
?RPubs
publish(title = 'mytitle', 'index.html', host = 'rpubs')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
negLogQQ <- function(x){
title <- deparse(substitute(x))
theoreticalVals <- -log((1:length(x))/length(x))
obsVals <- -log(sort(x))
plot(theoreticalVals, obsVals, main=title)
abline(0,1)
}
diffCpGMethPValues <- readRDS("./diffCpGMethPValues.rdata")
negLogQQ(diffCpGMethPValues[3,])
library("FDb.InfiniumMethylation.hg19")
hm450 <- get450k()
probenames <- rownames(betas)
probenames <- rownames(diffCpGMethPValues)
length(probenames)
probenames
length(rownames(diffCpGMethPValues))
rownames(diffCpGMethPValues)
dim(diffCpGMethPValues)
head(diffCpGMethPValues)
probenames <- colnames(diffCpGMethPValues)
length(probenames)
probes <- hm450[probenames]
genes <- getNearestGene(probes)$nearestGeneSymbol
dim(genes)
length(genes)
genes[1:10]
load("~/gd/Harvard/Research/TM_outputs/ECLIPSE_bere_bare_55557/activeImage55557.RData")
obsSsodm
dTFI_pVals
load("~/gd/Harvard/Research/TM_outputs/ECLIPSE_bere_bare_55557/activeImage55557.RData")
names(dTFI_pVals)
cpgs_for_TFs <- diffCpGMethPValues[,probes %in% names(dTFI_pVals)]
class(probes)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(dTFI_pVals)]
dim(cpgs_for_TFs)
library(ggplot2)
cpgs_for_TFs[,1:1-]
cpgs_for_TFs[,1:10]
tfs <- getNearestGene(colnames(cpgs_for_TFs))$nearestGeneSymbol
tfs <- genes[genes %in% names(dTFI_pVals)]
tfs
qplot(cpgs_for_TFs[,3],tfs)
length(cpgs_for_TFs[,3])
qplot(cpgs_for_TFs[,,],tfs)
qplot(cpgs_for_TFs[3,],tfs)
qplot(tfs,cpgs_for_TFs[3,])
order(dTFI_pVals)
qplot(tfs[order(dTFI_pVals)], cpgs_for_TFs[3,order(dTFI_pVals)])
tfs[order(dTFI_pVals)]
cpgs_for_TFs[3,order(dTFI_pVals)]
qplot(tfs,cpgs_for_TFs[3,])
dTFI_pVals <- sort(dTFI_pVals)
dTFI_pVals
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(dTFI_pVals)]
tfs <- genes[genes %in% names(dTFI_pVals)]
library(ggplot2)
qplot(tfs,cpgs_for_TFs[3,])
TFValues <- sort(ssodm)
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- genes[genes %in% names(TFValues)]
library(ggplot2)
qplot(tfs,cpgs_for_TFs[3,])
TFValues
TFValues <- as.factor(sort(dTFI_pVals))
TFValues
tfs
tfs <- as.factor(genes[genes %in% names(TFValues)])
tfs
levels(tfs)
levels(tfs) <- names(sort(TFValues))
levels(tfs)
tfs
qplot(tfs,cpgs_for_TFs[3,])
levels(tfs) <- names(sort(-TFValues))
names(sort(-TFValues))
TFValues
TFValues <- sort(dTFI_pVals)
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
levels(tfs) <- names(sort(-TFValues))
library(ggplot2)
qplot(tfs,cpgs_for_TFs[3,])
levels(tfs) <- names(sort(TFValues))
library(ggplot2)
qplot(tfs,cpgs_for_TFs[3,])
levels(tfs)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval)
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
tfs
levels(tfs)
TFValues <- sort(dTFI_pVals)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
levels(tfs) <- names(sort(TFValues))
library(ggplot2)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(tfs, negLogPval, col="blue") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(tfs, negLogPval, col="red") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(tfs, negLogPval, col=1) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(tfs, negLogPval, col=3) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(tfs, negLogPval, col="") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval))
obsSsodm
sort(obsSsodm)
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
levels(tfs) <- names(sort(TFValues))
library(ggplot2)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval))
TFValues
TFValues <- sort(obsSsodm)
TFValues
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs
levels(tfs) <- names(sort(TFValues))
tfs
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval))
levels(tfs)
levels(tfs) <- names(sort(-TFValues))
levels(tfs)
tfs
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
levels(tfs) <- names(sort(-TFValues))
tfs
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
levels(tfs) <- names(sort(TFValues))
tfs
tfs
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
levels(tfs) <- levels(tfs)[order(TFValues)]
levels(tfs)
order(TFValues)
TFValues
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
levels(tfs)
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
tfs
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- as.factor(genes[genes %in% names(TFValues)])
tfs
levels(tfs) <- levels(tfs)[sample(1:153)]
tfs
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
tfs
tfs[1:5]
genes <- getNearestGene(probes)$nearestGeneSymbol
genes[1:5]
genes %in% names(TFValues)[1:10]
(genes %in% names(TFValues))[1:10]
(genes %in% names(TFValues))[1:20]
genes[1:5]
genes[1:10]
tfs[1:5]
negLogPval <- -log(cpgs_for_TFs[3,])
TFValues <- sort(dTFI_pVals)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval))
tfs
levels(tfs)
TFValues <- sort(dTFI_pVals)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
library(ggplot2)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval))
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
library(ggplot2)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval))
?sort
TFValues <- sort(dTFI_pVals, decreasing=T)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
library(ggplot2)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval))
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("asd")
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs")
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by significance)")
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by significance)")
TFValues <- sort(dTFI_pVals, decreasing=T)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
library(ggplot2)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by significance)")
TFValues
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
library(ggplot2)
negLogPval <- -log(cpgs_for_TFs[3,])
qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by effect size)")
library(gridExtra)
library(ggExtra)
grid.arrange(plot1, plot2, nrow=2, top="differentially methylated CpG sites near TFs"))
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
plot1 <- qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by effect size)")
TFValues <- sort(dTFI_pVals, decreasing=T)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
plot2 <- qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by significance)")
grid.arrange(plot1, plot2, nrow=2, top="differentially methylated CpG sites near TFs")
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
plot1 <- qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by effect size)")
plot1
plot1 <- qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by effect size)")
TFValues <- sort(dTFI_pVals, decreasing=T)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
plot2 <- qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by significance)")
grid.arrange(plot1, plot2, nrow=2, top="differentially methylated CpG sites near TFs")
plot2
plot1
TFValues <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
plot1 <- qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by effect size)")
plot1
TFValues <- sort(dTFI_pVals, decreasing=T)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
plot2 <- qplot(tfs, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by significance)")
plot1
tfs
TFValues1 <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues)]
tfs1 <- factor(genes[genes %in% names(TFValues)], levels=names(TFValues))
negLogPval <- -log(cpgs_for_TFs[3,])
plot1 <- qplot(tfs1, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by effect size)")
plot1
TFValues1 <- sort(obsSsodm)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues1)]
tfs1 <- factor(genes[genes %in% names(TFValues1)], levels=names(TFValues1))
negLogPval <- -log(cpgs_for_TFs[3,])
plot1 <- qplot(tfs1, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by effect size)")
TFValues2 <- sort(dTFI_pVals, decreasing=T)
cpgs_for_TFs <- diffCpGMethPValues[,genes %in% names(TFValues2)]
tfs2 <- factor(genes[genes %in% names(TFValues2)], levels=names(TFValues2))
negLogPval <- -log(cpgs_for_TFs[3,])
plot2 <- qplot(tfs2, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("differentially methylated CpG sites near TFs (ordered by significance)")
grid.arrange(plot1, plot2, nrow=2, top="differentially methylated CpG sites near TFs")
negLogPval[1:10]
png('diffMethylCpG', width=1800)
grid.arrange(plot1, plot2, nrow=2, top="differentially methylated CpG sites near TFs")
dev.off()
plot1 <- qplot(tfs1, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("ordered by effect size")
plot2 <- qplot(tfs2, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("ordered by significance")
grid.arrange(plot1, plot2, nrow=2, top="differentially methylated CpG sites near TFs")
plot2 <- qplot(tfs2, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("ordered by significance")+
geom_smooth(method='lm',formula=negLogPval~tfs2)
plot2
plot2 <- qplot(tfs2, negLogPval) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_point(aes(colour = negLogPval)) + ggtitle("ordered by significance")+
geom_smooth(method='lm',formula=negLogPval~as.numeric(tfs2))
plot2
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
analysisNames <- c("ECLIPSE_bere_bare_55557","LGRC_bere_38678","COPDGene_bere_70856")
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
filenames
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames)
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
filenames
publicationTable
publicationTable[publicationTable[,1]=='RFX1',]
publicationTable[publicationTable[,1]=='RFX2',]
paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames)
filenames
