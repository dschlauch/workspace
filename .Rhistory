lines(roc.methodPred2@x.values[[1]], roc.methodPred2@y.values[[1]], col = "red", lwd=3)
abline(0,1)
legend("bottomright", c(paste0("TM = ",round(auc.methodPred,4)," \n(",p.value,")\n"),paste0("EW = ",round(auc.methodPred2,4)," \n(",p.value2,")")),
lty=1,lwd=5,col=c("blue","red"), title="Area under the curve",cex=2)
}
# ROCforTransitions(tm.gs,method="Gold Standard")
cutoff <- .4
png('./TM_manuscript/simulation_transition_predictions.png', width=1800, height=1000)
par(mfrow=c(2,5),oma=c(0,0,4,0),cex.main = 4)
ROCforTransitions(tm.pearson, directTMcor, cutoff, method="Correlation Network")
ROCforTransitions(tm.wgcna6, directTMwgcna, cutoff, method="WGCNA")
ROCforTransitions(tm.wgcna12, directTMwgcna12, cutoff, method="WGCNA (12)")
ROCforTransitions(tm.aracne, directTMaracne, cutoff, method="ARACNE")
ROCforTransitions(tm.clr, directTMclr, cutoff, method="CLR")
ROCforTransitions(tm.tom, directTMTOM, cutoff, method="TOM")
ROCforTransitions(tm.panda_motif1, directTMpanda_motif1, cutoff, method="PANDA*")
ROCforTransitions(tm.bere_motif1, directbereRes_motif2, cutoff, method="BERE*")
ROCforTransitions(tm.panda_motif2, t(directTMpanda_motif2), cutoff, method="PANDA**")
ROCforTransitions(tm.bere_motif2, directbereRes_motif2, cutoff, method="BERE**")
title("ROC plots for recovering transitions", outer=TRUE)
dev.off()
source('~/gd/Harvard/Research/R_workspace/sim_network_transition3.R')
source('~/gd/Harvard/Research/R_workspace/sim_network_transition3.R')
tm_true
set.seed(123)
numTFs <- 100
numGenes <- 6000
numTransitions <- 1000
numSamples <- 500
geneNames <- paste0("Gene",1:numGenes)
TFNames <- paste0("TF",1:numTFs)
true_edges <- runif(numGenes*numTFs)*rbinom(numGenes*numTFs,1,prob=.2)
matrixA_GS <- matrix(true_edges,nrow=numTFs)
matrixB_GS <- matrixA_GS# + matrix(rnorm(10000)/10,nrow=10)
probs <- rexp(numTFs)
TFAs <- sample(1:numTFs,numTransitions, replace=T)
TFBs <- sample(1:numTFs,numTransitions, replace=T, probs)
TFBs[TFAs==TFBs] <- sample(1:numTFs,sum(TFAs==TFBs), replace=T)
sum(sum(TFAs==TFBs))
strengths <- (c(-50:-1,1:50))/50
tm_true <- matrix(0,numTFs,numTFs)
tm_true
for(i in 1:numTransitions){
matrixB_GS[TFBs[i],] <- matrixB_GS[TFBs[i],] + matrixA_GS[TFAs[i],]*strengths[i]
tm_true[TFAs[i],TFBs[i]] <- strengths[i]
}
tm_true
strengths
TFBs
strengths <- (c(-numTransitions:-1,1:numTransitions))/numTransitions
strengths
tm_true <- matrix(0,numTFs,numTFs)
for(i in 1:numTransitions){
matrixB_GS[TFBs[i],] <- matrixB_GS[TFBs[i],] + matrixA_GS[TFAs[i],]*strengths[i]
tm_true[TFAs[i],TFBs[i]] <- strengths[i]
}
tm_true
sum(tm_true!=0)
source('~/.active-rstudio-document')
source('~/gd/Harvard/Research/R_workspace/sim_network_transition3.R')
cutoff <- .4
png('./TM_manuscript/simulation_transition_predictions.png', width=1800, height=1000)
par(mfrow=c(2,5),oma=c(0,0,4,0),cex.main = 4)
ROCforTransitions(tm.pearson, directTMcor, cutoff, method="Correlation Network")
ROCforTransitions(tm.wgcna6, directTMwgcna, cutoff, method="WGCNA")
ROCforTransitions(tm.wgcna12, directTMwgcna12, cutoff, method="WGCNA (12)")
ROCforTransitions(tm.aracne, directTMaracne, cutoff, method="ARACNE")
ROCforTransitions(tm.clr, directTMclr, cutoff, method="CLR")
ROCforTransitions(tm.tom, directTMTOM, cutoff, method="TOM")
ROCforTransitions(tm.panda_motif1, directTMpanda_motif1, cutoff, method="PANDA*")
ROCforTransitions(tm.bere_motif1, directbereRes_motif2, cutoff, method="BERE*")
ROCforTransitions(tm.panda_motif2, t(directTMpanda_motif2), cutoff, method="PANDA**")
ROCforTransitions(tm.bere_motif2, directbereRes_motif2, cutoff, method="BERE**")
title("ROC plots for recovering transitions", outer=TRUE)
dev.off()
# ROC for transitions
ROCforTransitions <- function(tm, tm2, alpha=.01,method=""){
goldStandard <- abs(c(tm_true))>alpha
methodPred  <- prediction(abs(c(tm)), goldStandard)
roc.methodPred  <- performance(methodPred, measure = c("tpr","auc"), x.measure = "fpr")
auc.methodPred  <- performance(methodPred, "auc")@y.values[[1]]
methodPred2  <- prediction(abs(c(tm2)), goldStandard)
roc.methodPred2  <- performance(methodPred2, measure = c("tpr","auc"), x.measure = "fpr")
auc.methodPred2  <- performance(methodPred2, "auc")@y.values[[1]]
p.value <- round(t.test(rank(c(tm))[goldStandard], rank(c(tm))[!goldStandard])$p.value,4)
if(p.value<2e-16){
p.value <- "p < 2e-16"
} else {
p.value <- paste0("p = ", p.value)
}
p.value2 <- round(t.test(rank(abs(c(tm2)))[goldStandard], rank(abs(c(tm2)))[!goldStandard])$p.value,4)
if(p.value2<2e-16){
p.value2 <- "p < 2e-16"
} else {
p.value2 <- paste0("p = ", p.value2)
}
plot(roc.methodPred, main=method, cex.main=2, col = "blue", lwd=3)
lines(roc.methodPred2@x.values[[1]], roc.methodPred2@y.values[[1]], col = "red", lwd=3)
abline(0,1)
legend("bottomright", c(paste0("TM = ",round(auc.methodPred,4)," \n(",p.value,")\n"),paste0("EW = ",round(auc.methodPred2,4)," \n(",p.value2,")")),
lty=1,lwd=5,col=c("blue","red"), title="Area under the curve",cex=2)
}
# ROCforTransitions(tm.gs,method="Gold Standard")
cutoff <- .4
png('./TM_manuscript/simulation_transition_predictions.png', width=1800, height=1000)
par(mfrow=c(2,5),oma=c(0,0,4,0),cex.main = 4)
ROCforTransitions(tm.pearson, directTMcor, cutoff, method="Correlation Network")
ROCforTransitions(tm.wgcna6, directTMwgcna, cutoff, method="WGCNA")
ROCforTransitions(tm.wgcna12, directTMwgcna12, cutoff, method="WGCNA (12)")
ROCforTransitions(tm.aracne, directTMaracne, cutoff, method="ARACNE")
ROCforTransitions(tm.clr, directTMclr, cutoff, method="CLR")
ROCforTransitions(tm.tom, directTMTOM, cutoff, method="TOM")
ROCforTransitions(tm.panda_motif1, directTMpanda_motif1, cutoff, method="PANDA*")
ROCforTransitions(tm.bere_motif1, directbereRes_motif2, cutoff, method="BERE*")
ROCforTransitions(tm.panda_motif2, t(directTMpanda_motif2), cutoff, method="PANDA**")
ROCforTransitions(tm.bere_motif2, directbereRes_motif2, cutoff, method="BERE**")
title("ROC plots for recovering transitions", outer=TRUE)
dev.off()
ROCforTransitions <- function(tm, tm2, alpha=.01,method=""){
goldStandard <- c(tm_true)>alpha
methodPred  <- prediction(c(tm), goldStandard)
roc.methodPred  <- performance(methodPred, measure = c("tpr","auc"), x.measure = "fpr")
auc.methodPred  <- performance(methodPred, "auc")@y.values[[1]]
methodPred2  <- prediction(c(tm2), goldStandard)
roc.methodPred2  <- performance(methodPred2, measure = c("tpr","auc"), x.measure = "fpr")
auc.methodPred2  <- performance(methodPred2, "auc")@y.values[[1]]
p.value <- round(t.test(rank(c(tm))[goldStandard], rank(c(tm))[!goldStandard])$p.value,4)
if(p.value<2e-16){
p.value <- "p < 2e-16"
} else {
p.value <- paste0("p = ", p.value)
}
p.value2 <- round(t.test(rank(abs(c(tm2)))[goldStandard], rank(abs(c(tm2)))[!goldStandard])$p.value,4)
if(p.value2<2e-16){
p.value2 <- "p < 2e-16"
} else {
p.value2 <- paste0("p = ", p.value2)
}
plot(roc.methodPred, main=method, cex.main=2, col = "blue", lwd=3)
lines(roc.methodPred2@x.values[[1]], roc.methodPred2@y.values[[1]], col = "red", lwd=3)
abline(0,1)
legend("bottomright", c(paste0("TM = ",round(auc.methodPred,4)," \n(",p.value,")\n"),paste0("EW = ",round(auc.methodPred2,4)," \n(",p.value2,")")),
lty=1,lwd=5,col=c("blue","red"), title="Area under the curve",cex=2)
}
# ROCforTransitions(tm.gs,method="Gold Standard")
cutoff <- .4
png('./TM_manuscript/simulation_transition_predictions.png', width=1800, height=1000)
par(mfrow=c(2,5),oma=c(0,0,4,0),cex.main = 4)
ROCforTransitions(tm.pearson, directTMcor, cutoff, method="Correlation Network")
ROCforTransitions(tm.wgcna6, directTMwgcna, cutoff, method="WGCNA")
ROCforTransitions(tm.wgcna12, directTMwgcna12, cutoff, method="WGCNA (12)")
ROCforTransitions(tm.aracne, directTMaracne, cutoff, method="ARACNE")
ROCforTransitions(tm.clr, directTMclr, cutoff, method="CLR")
ROCforTransitions(tm.tom, directTMTOM, cutoff, method="TOM")
ROCforTransitions(tm.panda_motif1, directTMpanda_motif1, cutoff, method="PANDA*")
ROCforTransitions(tm.bere_motif1, directbereRes_motif2, cutoff, method="BERE*")
ROCforTransitions(tm.panda_motif2, t(directTMpanda_motif2), cutoff, method="PANDA**")
ROCforTransitions(tm.bere_motif2, directbereRes_motif2, cutoff, method="BERE**")
title("ROC plots for recovering transitions", outer=TRUE)
dev.off()
corTFA <- mat2adj(t(tfExpA))
corTFB <- mat2adj(t(tfExpB))
directTMcor <- corTFB-corTFA
wgcnaTFA <- mat2adj(t(tfExpA), method="WGCNA")
wgcnaTFB <- mat2adj(t(tfExpB), method="WGCNA")
directTMwgcna <- wgcnaTFB-wgcnaTFA
tomTFA <- mat2adj(t(tfExpA), method="TOM")
tomTFB <- mat2adj(t(tfExpB), method="TOM")
directTMTOM <- tomTFB-tomTFA
wgcna12TFA <- mat2adj(t(tfExpA), method="WGCNA",P=12)
wgcna12TFB <- mat2adj(t(tfExpB), method="WGCNA",P=12)
directTMwgcna12 <- wgcna12TFB-wgcna12TFA
aracneTFA <- mat2adj(t(tfExpA), method="ARACNE")
aracneTFB <- mat2adj(t(tfExpB), method="ARACNE")
directTMaracne <- aracneTFB-aracneTFA
clrTFA <- mat2adj(t(tfExpA), method="CLR")
clrTFB <- mat2adj(t(tfExpB), method="CLR")
directTMclr <- clrTFB-clrTFA
directTMpanda_motif1 <- panda_motif1_AllB[,-1:-numGenes]-panda_motif1_AllA[,-1:-numGenes]
directTMpanda_motif1 <- directTMpanda_motif1[,rownames(directTMpanda_motif1)]
directTMpanda_motif2 <- panda_motif2_AllB[,-1:-numGenes]-panda_motif2_AllA[,-1:-numGenes]
directTMpanda_motif2 <- directTMpanda_motif2[,rownames(directTMpanda_motif2)]
# Issue is here: Bere does not have TFs in results
directbereRes_motif1 <- bere_motif1_AllB[,TFNames]-bere_motif1_AllA[,TFNames]
directbereRes_motif1 <- directbereRes_motif1[TFNames,TFNames]
directbereRes_motif2 <- bere_motif2_AllB[,TFNames]-bere_motif2_AllA[,TFNames]
directbereRes_motif2 <- directbereRes_motif2[TFNames,TFNames]
cutoff <- .4
png('./TM_manuscript/simulation_transition_predictions.png', width=1800, height=1000)
par(mfrow=c(2,5),oma=c(0,0,4,0),cex.main = 4)
ROCforTransitions(tm.pearson, directTMcor, cutoff, method="Correlation Network")
ROCforTransitions(tm.wgcna6, directTMwgcna, cutoff, method="WGCNA")
ROCforTransitions(tm.wgcna12, directTMwgcna12, cutoff, method="WGCNA (12)")
ROCforTransitions(tm.aracne, directTMaracne, cutoff, method="ARACNE")
ROCforTransitions(tm.clr, directTMclr, cutoff, method="CLR")
ROCforTransitions(tm.tom, directTMTOM, cutoff, method="TOM")
ROCforTransitions(tm.panda_motif1, directTMpanda_motif1, cutoff, method="PANDA*")
ROCforTransitions(tm.bere_motif1, directbereRes_motif2, cutoff, method="BERE*")
ROCforTransitions(tm.panda_motif2, t(directTMpanda_motif2), cutoff, method="PANDA**")
ROCforTransitions(tm.bere_motif2, directbereRes_motif2, cutoff, method="BERE**")
title("ROC plots for recovering transitions", outer=TRUE)
dev.off()
cutoff <- .4
png('./TM_manuscript/simulation_transition_predictions.png', width=1800, height=1000)
par(mfrow=c(2,5),oma=c(0,0,4,0),cex.main = 4)
ROCforTransitions(tm.pearson, directTMcor, cutoff, method="Correlation Network")
ROCforTransitions(tm.wgcna6, directTMwgcna, cutoff, method="WGCNA")
ROCforTransitions(tm.wgcna12, directTMwgcna12, cutoff, method="WGCNA (12)")
ROCforTransitions(tm.aracne, directTMaracne, cutoff, method="ARACNE")
ROCforTransitions(tm.clr, directTMclr, cutoff, method="CLR")
ROCforTransitions(tm.tom, directTMTOM, cutoff, method="TOM")
ROCforTransitions(tm.panda_motif1, directTMpanda_motif1, cutoff, method="PANDA*")
ROCforTransitions(tm.bere_motif1, directbereRes_motif2, cutoff, method="BERE*")
ROCforTransitions(tm.panda_motif2, t(directTMpanda_motif2), cutoff, method="PANDA**")
ROCforTransitions(tm.bere_motif2, directbereRes_motif2, cutoff, method="BERE**")
title("ROC plots for recovering transitions", outer=TRUE)
dev.off()
library(WGCNA)
library(bptools)
library(gplots)
library(ROCR)
library(penalized)
library(tidyr)
library(bereR)
library(pandaR)
library(corpcor)
library(nettools)
cutoff <- .4
png('./TM_manuscript/simulation_transition_predictions.png', width=1800, height=1000)
par(mfrow=c(2,5),oma=c(0,0,4,0),cex.main = 4)
ROCforTransitions(tm.pearson, directTMcor, cutoff, method="Correlation Network")
ROCforTransitions(tm.wgcna6, directTMwgcna, cutoff, method="WGCNA")
ROCforTransitions(tm.wgcna12, directTMwgcna12, cutoff, method="WGCNA (12)")
ROCforTransitions(tm.aracne, directTMaracne, cutoff, method="ARACNE")
ROCforTransitions(tm.clr, directTMclr, cutoff, method="CLR")
ROCforTransitions(tm.tom, directTMTOM, cutoff, method="TOM")
ROCforTransitions(tm.panda_motif1, directTMpanda_motif1, cutoff, method="PANDA*")
ROCforTransitions(tm.bere_motif1, directbereRes_motif2, cutoff, method="BERE*")
ROCforTransitions(tm.panda_motif2, t(directTMpanda_motif2), cutoff, method="PANDA**")
ROCforTransitions(tm.bere_motif2, directbereRes_motif2, cutoff, method="BERE**")
title("ROC plots for recovering transitions", outer=TRUE)
dev.off()
source('~/gd/Harvard/Research/R_workspace/sim_network_transition3.R')
library(ggplot2)
library(gridExtra)
library(ggExtra)
analysisNames <- c("ECLIPSE_bere_bare_55557","COPDGene_bere_70856", "LGRC_bere_56432","LTCOPD_bere_bare_92540")
displayNames <- c("ECLIPSE","COPDGene","LGRC","LTCOPD")
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
suppressWarnings(grid.arrange(plot3, plot4, plot6, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
plot1 <- suppressWarnings(makeComparisonPlot(c(1,2)))
plot2 <- suppressWarnings(makeComparisonPlot(c(3,4)))
plot3 <- suppressWarnings(makeComparisonPlot(c(1,3)))
plot4 <- suppressWarnings(makeComparisonPlot(c(1,4)))
plot5 <- suppressWarnings(makeComparisonPlot(c(2,3)))
plot6 <- suppressWarnings(makeComparisonPlot(c(2,4)))
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
suppressWarnings(grid.arrange(plot3, plot4, plot6, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
plot1 <- suppressWarnings(makeComparisonPlot(c(1,2)))
plot2 <- suppressWarnings(makeComparisonPlot(c(3,4)))
plot3 <- suppressWarnings(makeComparisonPlot(c(1,3)))
plot4 <- suppressWarnings(makeComparisonPlot(c(2,3)))
plot5 <- suppressWarnings(makeComparisonPlot(c(1,4)))
plot6 <- suppressWarnings(makeComparisonPlot(c(2,4)))
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
png('eclipse_copdgene_lgrc_comparison_same_tissue.png', width=1800)
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
dev.off()
png('eclipse_copdgene_lgrc_comparison_diff_tissue.png', width=1800)
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
dev.off()
getwd()
png('./TM_manusript/eclipse_copdgene_lgrc_comparison_same_tissue.png', width=1800)
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
dev.off()
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_same_tissue.png', width=1800)
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
dev.off()
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_diff_tissue.png', width=1800)
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
dev.off()
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_same_tissue.png', width=1800, height=900)
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
dev.off()
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_diff_tissue.png', width=1800,height=1500)
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
dev.off()
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_diff_tissue.png', width=900,height=750)
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
dev.off()
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_same_tissue.png', width=900, height=450)
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
dev.off()
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_diff_tissue.png', width=900,height=750)
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues"))
dev.off()
?cor
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_same_tissue.png', width=900, height=450)
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
dev.off()
plot1 <- suppressWarnings(makeComparisonPlot(c(1,2)))
plot2 <- suppressWarnings(makeComparisonPlot(c(3,4)))
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_same_tissue.png', width=900, height=450)
suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
dev.off()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(1:10,main=expression("This is a subscript "[2]))
expression("This is a subscript "[2])
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
corText <- expression(paste0("r[s]",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs", method="spearman"),4))
corText <- expression(paste0("r[s]",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs", method="spearman"),4)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
cat('asd')
cat('asd','asds')
cat('asd','asds',sep=0)
cat('asd','asds',sep="")
cat0('asd','asds',sep="")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
eval(corText)
?expression
source('~/.active-rstudio-document')
xlab <- bquote(.(labNames[1]) ~ x^2)
xlab <- bquote(.(1234) ~ x^2)
xlab
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
bquote(.(assay) ~ AC50 ~ (mu*M))
bquote(.(numTFs) ~ AC50 ~ (mu*M))
bquote( ~ AC50 ~ (mu*M) .(numTFs))
bquote( ~ AC50 ~ (mu*M) (numTFs))
bquote( ~ AC50 ~ (mu*M) .(numTFs))
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs", method="spearman"),4))
pair=1:2
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs", method="spearman"),4))
corText
corText <- paste0("r^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs", method="spearman"),4))
corText
corText <- paste0("r[2]=",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs", method="spearman"),4))
corText
source('~/.active-rstudio-document')
expression(corText)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues",
left = textGrob("Global Y-axis Label", rot = 90, vjust = 1))))
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues",
left = textGrob("Global Y-axis Label", rot = 90, vjust = 1)))
library(gtable)
left = textGrob("Global Y-axis Label", rot = 90, vjust = 1)))
left = textGrob("Global Y-axis Label", rot = 90, vjust = 1))
left = textGrob("Global Y-axis Label", rot = 90, vjust = 1)
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues",
left = textGrob("Lung Tissue", rot = 90, vjust = 1), bottom = textGrob("Lung Tissue", rot = 90, vjust = 1)))
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
combined_across_plot <- suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
combined_across_plot
combined_within_plot <- suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
combined_across_plot <- suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues",
left = textGrob("Lung Tissue", rot = 90, vjust = 1), bottom = textGrob("Blood")))
plot(combined_within_plot)
plot(combined_across_plot)
suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues",
left = textGrob("Lung Tissue", rot = 90, vjust = 1), bottom = textGrob("Blood")))
plot(combined_within_plot)
plot(combined_across_plot)
png('./TM_manuscript/eclipse_copdgene_lgrc_comparison_same_tissue.png', width=900, height=450)
plot(combined_within_plot)
dev.off()
plot(suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue")))
combined_within_plot <- suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
combined_within_plot
class(combined_within_plot)
print(combined_within_plot)
grid.draw(combined_within_plot)
grid.draw(combined_across_plot)
plot.new()
combined_within_plot <- suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
combined_across_plot <- suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues",
left = textGrob("Lung Tissue", rot = 90, vjust = 1), bottom = textGrob("Blood")))
grid.draw(combined_within_plot)
grid.draw(combined_across_plot)
plot.new()
combined_within_plot <- suppressWarnings(grid.arrange(plot1, plot2, ncol=2, top="Comparison of Differential TF Involvement Across Studies of same tissue"))
combined_across_plot <- suppressWarnings(grid.arrange(plot3, plot4, plot5, plot6, ncol=2, top="Comparison of Differential TF Involvement Across Studies of different tissues",
left = textGrob("Lung Tissue", rot = 90, vjust = 1), bottom = textGrob("Blood")))
grid.draw(combined_within_plot)
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
source('~/.active-rstudio-document')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
head(merged.data.frame)
analysisNames
load("~/gd/Harvard/Research/TM_outputs/LTCOPD_bere_bare_92540/activeImage92540.RData")
load("~/gd/Harvard/Research/TM_outputs/LTCOPD_bere_bare_92540/activeImage92540.RData")
class(transMatrices)
class(transMatrices[[1]])
dim(transMatrices[[1]])
load("~/gd/Harvard/Research/TM_outputs/LTCOPD_bere_bare_92540/activeImage92540.RData")
ltcopdTM <- transMatrices[[1]]
load("~/gd/Harvard/Research/TM_outputs/LTCOPD_bere_bare_56432/activeImage56432.RData")
load("~/gd/Harvard/Research/TM_outputs/LGRC_bere_56432/activeImage56432.RData")
lgrccopdTM <- transMatrices[[1]]
load("~/gd/Harvard/Research/TM_outputs/ECLIPSE_bere_bare_55557/activeImage55557.RData")
load("~/gd/Harvard/Research/TM_outputs/LTCOPD_bere_bare_92540/activeImage92540.RData")
ltcopd_TM <- transMatrices[[1]]
load("~/gd/Harvard/Research/TM_outputs/LGRC_bere_56432/activeImage56432.RData")
lgrc_TM <- transMatrices[[1]]
load("~/gd/Harvard/Research/TM_outputs/ECLIPSE_bere_bare_55557/activeImage55557.RData")
eclipse_TM <- transMatrices[[1]]
load("~/gd/Harvard/Research/TM_outputs/COPDGene_bere_70856/activeImage70856.RData")
COPDGene_TM <- transMatrices[[1]]
library(ggplot2)
qplot(c(ltcopd_TM),c(lgrc_TM))
summary(lm(c(ltcopd_TM)~c(lgrc_TM)))
cor(c(ltcopd_TM),c(lgrc_TM))
qplot(c(eclipse_TM),c(COPDGene_TM))
cor(c(eclipse_TM),c(COPDGene_TM))
summary(lm(c(eclipse_TM)~c(COPDGene_TM)))
qplot(c(ltcopd_TM),c(lgrc_TM)) + geom_smooth(method=lm)
qplot(c(eclipse_TM),c(COPDGene_TM)) + geom_smooth(method=lm)
qplot(c(ltcopd_TM),c(COPDGene_TM)) + geom_smooth(method=lm)
cor(c(ltcopd_TM),c(COPDGene_TM))
summary(lm(c(ltcopd_TM)~c(COPDGene_TM)))
qplot(c(lgrc_TM),c(COPDGene_TM)) + geom_smooth(method=lm)
cor(c(lgrc_TM),c(COPDGene_TM))
summary(lm(c(lgrc_TM)~c(COPDGene_TM)))
diag(lgrc_TM)
ECLIPSE_Blood_Motif <- read.delim("~/gd/Harvard/Research/data/Eclipse/ECLIPSE_Blood_Motif.txt", header=FALSE, stringsAsFactors=FALSE)
View(ECLIPSE_Blood_Motif)
library(data.table)
ECLIPSE_Blood_Motif <- data.table(read.delim("~/gd/Harvard/Research/data/Eclipse/ECLIPSE_Blood_Motif.txt", header=FALSE, stringsAsFactors=FALSE))
ECLIPSE_Blood_Motif
ECLIPSE_Blood_Motif[V1==AR]
ECLIPSE_Blood_Motif[V1==AR,]
ECLIPSE_Blood_Motif[V1=="AR"]
ECLIPSE_Blood_Motif[V1=="GABPA"]
ECLIPSE_Blood_Motif[V2=="GABPA"]
ECLIPSE_Blood_Motif[V2=="IREB"]
ECLIPSE_Blood_Motif[V2=="IREB2"]
ECLIPSE_Blood_Motif[V1=="GABPA",]
ECLIPSE_Blood_Motif[V2=="IREB2",]
dim(ECLIPSE_Blood_Motif[V2=="IREB2",])
print(ECLIPSE_Blood_Motif[V2=="IREB2",])
`KG_cisbp_652(with1)` <- read.delim("~/gd/Harvard/Research/data/GTEx/KG_cisbp_652(with1).txt", header=FALSE)
View(`KG_cisbp_652(with1)`)
motifs_new <- read.delim("~/gd/Harvard/Research/data/GTEx/KG_cisbp_652(with1).txt", header=FALSE)
dim(motifs_new)
head(motifs_new)
symbols <- mapIds(org.Hs.eg.db, keys=row.names(dataset$exp),column="SYMBOL", keytype="ENSEMBL", multiVals="first")
library(org.Hs.eg.db)
symbols <- mapIds(org.Hs.eg.db, keys=row.names(dataset$exp),column="SYMBOL", keytype="ENSEMBL", multiVals="first")
symbols <- mapIds(org.Hs.eg.db, keys=motifs_new[,2],column="SYMBOL", keytype="ENSEMBL", multiVals="first")
head(motifs_new)
motifs_new[1:10,2]
?read.delim
motifs_new <- read.delim("~/gd/Harvard/Research/data/GTEx/KG_cisbp_652(with1).txt", header=FALSE, stringsAsFactors=F)
symbols <- mapIds(org.Hs.eg.db, keys=motifs_new[,2],column="SYMBOL", keytype="ENSEMBL", multiVals="first")
symbols[1:5]
motifs_new[,2] <- motifs_new[!is.na(symbols) & !duplicated(symbols),2]
sum(!is.na(symbols))
sum(!duplicated(symbols))
symbols <- mapIds(org.Hs.eg.db, keys=motifs_new[,2],column="SYMBOL", keytype="ENSEMBL", multiVals="first")
motifs_new[,2] <- motifs_new[!is.na(symbols) & !duplicated(symbols),2]
head(motifs_new)
dim(motifs_new)
symbols[1:5]
length(symbols)
symbols[motifs_new[1:5,2]]
motifs_new[1:5,2]
motifs_new[,2] <- symbols
head(motifs_new)
TFmappings <- read.table("~/gd/Harvard/Research/data/GTEx/cisbpall_motinf.txt", header=T)
head(TFmappings)
mappings[,1] <- substring(mappings[,1],0,5)
mappings[1:5,1]
TFmappings[,1] <- substring(TFmappings[,1],0,5)
head(TFmappings)
motifs_new[,1] <- TFmappings[match(motifs_new[,1], TFmappings[,1]),2]
head(motifs_new)
unique(motifs_new[,1])
head(motifs_new)
write.table(motifs_new,"~/gd/Harvard/Research/data/motifs695.txt")
write.table(motifs_new,"~/gd/Harvard/Research/data/motifs695.txt", quote=F)
write.table(motifs_new,"~/gd/Harvard/Research/data/motifs695.txt", quote=F, header=F)
write.table(motifs_new,"~/gd/Harvard/Research/data/motifs695.txt", quote=F, col.names = F, row.names = F)
