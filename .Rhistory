clusterE[clusterELoci] <- 1-clusterE[clusterELoci]
clusterF <- clusterC
clusterF[clusterFLoci] <- 1-clusterF[clusterFLoci]
clusterG <- clusterF
clusterG[clusterGLoci] <- 1-clusterG[clusterGLoci]
data <- cbind(germline,clusterA,clusterB,clusterC,clusterD,clusterE,clusterF,clusterG)
dataObs <- apply(data,2, function(x){
errors <- sample(length(x),errorsPerSample)
x[errors] <- 1-x[errors]
x
})
# write.table(dataObs,file="./simulatedPhylogeneticData.txt", row.names = F, sep="\t")
# system('tar -czvf ./simulatedPhylogeneticData.txt.gz ./simulatedPhylogeneticData.txt')
dm <- dist(t(dataObs))
plot(hclust(dm))
library(igraph)
adj <- cor2pcor(cor(dataObs))
diag(adj) <- 0
round(adj,3)
adj[adj>.1] <- 1
adj[adj<.1] <- 0
colnames(adj) <- c("Germline",LETTERS[1:7])
rownames(adj) <- c("Germline",LETTERS[1:7])
g <- graph.adjacency(adj, mode="undirected", weighted=T)
plot(g, layout=layout_with_kk)
dim(dataObs)
getwd()
nVariants <- 10000000
germline <- rbinom(nVariants,1,.01)
errorRate <- .00001
somaticMutRate <- .0001
errorsPerSample <- errorRate*nVariants
somatPerSample <- somaticMutRate*nVariants
clusterALoci <- sample(nVariants,somatPerSample)
clusterBLoci <- sample(nVariants,somatPerSample)
clusterCLoci <- sample(nVariants,somatPerSample)
clusterDLoci <- sample(nVariants,somatPerSample)
clusterELoci <- sample(nVariants,somatPerSample)
clusterFLoci <- sample(nVariants,somatPerSample)
clusterGLoci <- sample(nVariants,somatPerSample)
clusterA <- germline
clusterA[clusterALoci] <- 1-clusterA[clusterALoci]
clusterB <- clusterA
clusterB[clusterBLoci] <- 1-clusterB[clusterBLoci]
clusterC <- clusterA
clusterC[clusterCLoci] <- 1-clusterC[clusterCLoci]
clusterD <- clusterB
clusterD[clusterDLoci] <- 1-clusterD[clusterDLoci]
clusterE <- clusterB
clusterE[clusterELoci] <- 1-clusterE[clusterELoci]
clusterF <- clusterC
clusterF[clusterFLoci] <- 1-clusterF[clusterFLoci]
clusterG <- clusterF
clusterG[clusterGLoci] <- 1-clusterG[clusterGLoci]
data <- cbind(germline,clusterA,clusterB,clusterC,clusterD,clusterE,clusterF,clusterG)
dataObs <- apply(data,2, function(x){
errors <- sample(length(x),errorsPerSample)
x[errors] <- 1-x[errors]
x
})
write.table(dataObs,file="./simulatedPhylogeneticData.txt", row.names = F, sep="\t")
system('tar -czvf ./simulatedPhylogeneticData.txt.gz ./simulatedPhylogeneticData.txt')
dm <- dist(t(dataObs))
plot(hclust(dm))
library(igraph)
adj <- cor2pcor(cor(dataObs))
diag(adj) <- 0
round(adj,3)
adj[adj>.1] <- 1
adj[adj<.1] <- 0
colnames(adj) <- c("Germline",LETTERS[1:7])
rownames(adj) <- c("Germline",LETTERS[1:7])
g <- graph.adjacency(adj, mode="undirected", weighted=T)
plot(g, layout=layout_with_kk)
errorsPerSample
somatPerSample
1/errorRate
nVariants <- 10000000
germline <- rbinom(nVariants,1,.01)
errorRate <- .00002
somaticMutRate <- .00008
errorsPerSample <- errorRate*nVariants
somatPerSample <- somaticMutRate*nVariants
clusterALoci <- sample(nVariants, somatPerSample)
clusterBLoci <- sample(nVariants, somatPerSample)
clusterCLoci <- sample(nVariants, somatPerSample)
clusterDLoci <- sample(nVariants, somatPerSample)
clusterELoci <- sample(nVariants, somatPerSample)
clusterFLoci <- sample(nVariants, somatPerSample)
clusterGLoci <- sample(nVariants, somatPerSample)
clusterA <- germline
clusterA[clusterALoci] <- 1-clusterA[clusterALoci]
clusterB <- clusterA
clusterB[clusterBLoci] <- 1-clusterB[clusterBLoci]
clusterC <- clusterA
clusterC[clusterCLoci] <- 1-clusterC[clusterCLoci]
clusterD <- clusterB
clusterD[clusterDLoci] <- 1-clusterD[clusterDLoci]
clusterE <- clusterB
clusterE[clusterELoci] <- 1-clusterE[clusterELoci]
clusterF <- clusterC
clusterF[clusterFLoci] <- 1-clusterF[clusterFLoci]
clusterG <- clusterF
clusterG[clusterGLoci] <- 1-clusterG[clusterGLoci]
data <- cbind(germline,clusterA,clusterB,clusterC,clusterD,clusterE,clusterF,clusterG)
dataObs <- apply(data,2, function(x){
errors <- sample(length(x),errorsPerSample)
x[errors] <- 1-x[errors]
x
})
rownames(dataObs) <- 1:nVariants
# write.table(dataObs,file="./simulatedPhylogeneticData.txt", row.names = F, sep="\t")
# system('tar -czvf ./simulatedPhylogeneticData.txt.gz ./simulatedPhylogeneticData.txt')
dm <- dist(t(dataObs))
plot(hclust(dm))
library(igraph)
adj <- cor2pcor(cor(dataObs))
diag(adj) <- 0
round(adj,3)
adj[adj>.1] <- 1
adj[adj<.1] <- 0
colnames(adj) <- c("Germline",LETTERS[1:7])
rownames(adj) <- c("Germline",LETTERS[1:7])
g <- graph.adjacency(adj, mode="undirected", weighted=T)
plot(g, layout=layout_with_kk)
1
plot(g, layout=layout_with_kk)
adj <- cor2pcor(cor(dataObs))
diag(adj) <- 0
round(adj,3)
adj[adj>.1] <- 1
adj[adj<.1] <- 0
adj
adj <- cor2pcor(cor(dataObs))
diag(adj) <- 0
round(adj,3)
adj[adj>.2] <- 1
adj[adj<.2] <- 0
colnames(adj) <- c("Germline",LETTERS[1:7])
rownames(adj) <- c("Germline",LETTERS[1:7])
g <- graph.adjacency(adj, mode="undirected", weighted=T)
plot(g, layout=layout_with_kk)
write.table(dataObs,file="./simulatedPhylogeneticData.txt", row.names = F, sep="\t")
system('tar -czvf ./simulatedPhylogeneticData.txt.gz ./simulatedPhylogeneticData.txt')
head(dataObs)
write.table(dataObs,file="./simulatedPhylogeneticData.txt", row.names = T, sep="\t")
write.table(dataObs,file="./simulatedPhylogeneticData.txt", row.names = T, sep="\t",quote = F)
system('tar -czvf ./simulatedPhylogeneticData.txt.gz ./simulatedPhylogeneticData.txt')
COPDDir <- "~/gd/Harvard/Research/data/"
variantData <-read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
eI <- 10^(-4) # error probability
eI
theta <- 6.22
variants$variantNormal <- rep(x = 0,times=dim(variantData)[1])
variants <-read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
variants$variantNormal <- rep(x = 0,times=dim(variantData)[1])
variants$variantTumor <- rep(x = 0,times=dim(variantData)[1])
numberPossibleVariants <- dim(variantData)[1]
for(i in 1:numberPossibleVariants){
numberAlts_Tumor <- variantData[i,9]
numberAlts_Normal <- variantData[i,7]
numberRef_Tumor <- variantData[i,8]
numberRef_Normal <- variantData[i,6]
# calculate fHat = mutant/total
fHatNormal <- numberAlts_Normal/(numberAlts_Normal+numberRef_Normal)
fHatTumor <- numberAlts_Tumor/(numberAlts_Tumor+numberRef_Tumor)
# under the alternative f = fHat
L_Mf_Normal <- ((1-eI)*(1-fHatNormal)+fHatNormal*(eI/3))^numberRef_Normal *
(fHatNormal*(1-eI)+(1-fHatNormal)*(eI/3))^numberAlts_Normal
L_Mf_Tumor <- ((1-eI)*(1-fHatTumor)+fHatTumor*(eI/3))^numberRef_Tumor *
(fHatTumor*(1-eI)+(1-fHatTumor)*(eI/3))^numberAlts_Tumor
# under the null f=0
L_M0_Normal <- (1-eI)^numberRef_Normal * (eI/3)^numberAlts_Normal
L_M0_Tumor <- (1-eI)^numberRef_Tumor * (eI/3)^numberAlts_Tumor
# calculate ratio of likelihoods
ratioLikelihoods_Normal <- log10(L_Mf_Normal/L_M0_Normal)
ratioLikelihoods_Tumor <- log10(L_Mf_Tumor/L_M0_Tumor)
ifelse(ratioLikelihoods_Normal >= theta,
variants$variantNormal[i] <- 1,
variants$variantNormal[i] <- 0)
ifelse(ratioLikelihoods_Tumor >= theta,
variants$variantTumor[i] <- 1,
variants$variantTumor[i] <- 0)
}
tumorNonCandidates <- length(which(variants$variantTumor==0))
tumorCandidates <- length(which(variants$variantTumor==1))
normalNonVariants <- length(which(variants$variantNormal==0))
normalVariants <- length(which(variants$variantNormal==1))
seqres <- read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
e_i <- .001
theta_t <- 6.3
seqres$t_af <- seqres$t_alt_count/(seqres$t_ref_count+seqres$t_alt_count)
seqres$n_af <- seqres$n_alt_count/(seqres$n_ref_count+seqres$n_alt_count)
seqres$LMFM <- (seqres$t_af*(e_i/3) + (1-seqres$t_af)*(1-e_i))^seqres$t_ref_count *
(seqres$t_af*(1-e_i)+(1-seqres$t_af)*(e_i/3))^seqres$t_alt_count
seqres$LM0 <- (1-e_i)^seqres$t_ref_count * (1-seqres$t_af)*(e_i/3)^seqres$t_alt_count
seqres$LODT <- log((seqres$LMFM)/(seqres$LM0),10)
seqres$Candidates <- seqres$LODT> theta_t
seqres$Candidates[is.na(seqres$Candidates)] <- T
sum(seqres$Candidates)
seqres$LMFM_N <- (seqres$n_af*(e_i/3) + (1-seqres$n_af)*(1-e_i))^seqres$n_ref_count *
(seqres$n_af*(1-e_i)+(1-seqres$n_af)*(e_i/3))^seqres$n_alt_count
seqres$LM0_N <- (1-e_i)^seqres$n_ref_count * (1-seqres$n_af)*(e_i/3)^seqres$n_alt_count
seqres$LODT_N <- log(seqres$LMFM_N/seqres$LM0_N,10)
seqres$GermlineMuts <- seqres$LODT_N>theta_t
seqres$GermlineMuts[is.na(seqres$GermlineMuts)] <- T
sum(seqres$GermlineMuts)
seqres$somatic <- seqres$Candidates&(!seqres$GermlineMuts)
seqres$Candidates
sum(seqres$Candidates)
length(seqres$Candidates)
seqres$LODT
theta_t
head(variants)
i <- 1
numberAlts_Tumor <- variantData[i,9]
numberAlts_Normal <- variantData[i,7]
numberRef_Tumor <- variantData[i,8]
numberRef_Normal <- variantData[i,6]
fHatNormal <- numberAlts_Normal/(numberAlts_Normal+numberRef_Normal)
fHatTumor <- numberAlts_Tumor/(numberAlts_Tumor+numberRef_Tumor)
L_Mf_Normal <- ((1-eI)*(1-fHatNormal)+fHatNormal*(eI/3))^numberRef_Normal *
(fHatNormal*(1-eI)+(1-fHatNormal)*(eI/3))^numberAlts_Normal
L_Mf_Tumor <- ((1-eI)*(1-fHatTumor)+fHatTumor*(eI/3))^numberRef_Tumor *
(fHatTumor*(1-eI)+(1-fHatTumor)*(eI/3))^numberAlts_Tumor
L_M0_Normal <- (1-eI)^numberRef_Normal * (eI/3)^numberAlts_Normal
L_M0_Tumor <- (1-eI)^numberRef_Tumor * (eI/3)^numberAlts_Tumor
ratioLikelihoods_Normal <- log10(L_Mf_Normal/L_M0_Normal)
ratioLikelihoods_Tumor <- log10(L_Mf_Tumor/L_M0_Tumor)
ratioLikelihoods_Tumor
ratioLikelihoods_Normal
seqres <- read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
e_i <- .001
theta_t <- 6.3
seqres$t_af <- seqres$t_alt_count/(seqres$t_ref_count+seqres$t_alt_count)
seqres$n_af <- seqres$n_alt_count/(seqres$n_ref_count+seqres$n_alt_count)
seqres$LMFM <- (seqres$t_af*(e_i/3) + (1-seqres$t_af)*(1-e_i))^seqres$t_ref_count *
(seqres$t_af*(1-e_i)+(1-seqres$t_af)*(e_i/3))^seqres$t_alt_count
seqres$LM0 <- (1-e_i)^seqres$t_ref_count * (1-seqres$t_af)*(e_i/3)^seqres$t_alt_count
seqres$LODT <- log((seqres$LMFM)/(seqres$LM0),10)
seqres$Candidates <- seqres$LODT> theta_t
head(seqres)
head(variants)
numberAlts_Tumor <- variantData[i,9]
numberAlts_Normal <- variantData[i,7]
numberRef_Tumor <- variantData[i,8]
numberRef_Normal <- variantData[i,6]
fHatNormal <- numberAlts_Normal/(numberAlts_Normal+numberRef_Normal)
fHatTumor <- numberAlts_Tumor/(numberAlts_Tumor+numberRef_Tumor)
fHatNormal
fHatTumor
head(seqres)
L_Mf_Normal <- ((1-eI)*(1-fHatNormal)+fHatNormal*(eI/3))^numberRef_Normal *
(fHatNormal*(1-eI)+(1-fHatNormal)*(eI/3))^numberAlts_Normal
L_Mf_Tumor <- ((1-eI)*(1-fHatTumor)+fHatTumor*(eI/3))^numberRef_Tumor *
(fHatTumor*(1-eI)+(1-fHatTumor)*(eI/3))^numberAlts_Tumor
L_Mf_Normal
L_Mf_Tumor
eI
e_i
1e-03
L_M0_Normal <- (1-eI)^numberRef_Normal * (eI/3)^numberAlts_Normal
L_M0_Tumor <- (1-eI)^numberRef_Tumor * (eI/3)^numberAlts_Tumor
L_M0_Tumor
head(seqres)
e_i <- .0001
theta_t <- 6.3
seqres$t_af <- seqres$t_alt_count/(seqres$t_ref_count+seqres$t_alt_count)
seqres$n_af <- seqres$n_alt_count/(seqres$n_ref_count+seqres$n_alt_count)
seqres$LMFM <- (seqres$t_af*(e_i/3) + (1-seqres$t_af)*(1-e_i))^seqres$t_ref_count *
(seqres$t_af*(1-e_i)+(1-seqres$t_af)*(e_i/3))^seqres$t_alt_count
seqres$LM0 <- (1-e_i)^seqres$t_ref_count * (1-seqres$t_af)*(e_i/3)^seqres$t_alt_count
seqres$LODT <- log((seqres$LMFM)/(seqres$LM0),10)
seqres$Candidates <- seqres$LODT> theta_t
seqres$Candidates[is.na(seqres$Candidates)] <- T
sum(seqres$Candidates)
seqres$Candidates
sum(seqres$Candidates)
seqres$Candidates <- seqres$LODT> theta_t
seqres$Candidates[is.na(seqres$Candidates)] <- T
sum(seqres$Candidates)
seqres$LMFM_N <- (seqres$n_af*(e_i/3) + (1-seqres$n_af)*(1-e_i))^seqres$n_ref_count *
(seqres$n_af*(1-e_i)+(1-seqres$n_af)*(e_i/3))^seqres$n_alt_count
seqres$LM0_N <- (1-e_i)^seqres$n_ref_count * (1-seqres$n_af)*(e_i/3)^seqres$n_alt_count
seqres$LODT_N <- log(seqres$LMFM_N/seqres$LM0_N,10)
seqres$GermlineMuts <- seqres$LODT_N>theta_t
seqres$GermlineMuts[is.na(seqres$GermlineMuts)] <- T
sum(seqres$GermlineMuts)
seqres$somatic <- seqres$Candidates&(!seqres$GermlineMuts)
somaticVariants <- seqres[seqres$somatic,]
somaticVariants[order(-somaticVariants$t_af),]
sum(seqres$somatic)
seqres <- read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
e_i <- .0001
theta_t <- 6.3
seqres$t_af <- seqres$t_alt_count/(seqres$t_ref_count+seqres$t_alt_count)
seqres$n_af <- seqres$n_alt_count/(seqres$n_ref_count+seqres$n_alt_count)
seqres$LMFM <- (seqres$t_af*(e_i/3) + (1-seqres$t_af)*(1-e_i))^seqres$t_ref_count *
(seqres$t_af*(1-e_i)+(1-seqres$t_af)*(e_i/3))^seqres$t_alt_count
seqres$LM0 <- (1-e_i)^seqres$t_ref_count * (1-seqres$t_af)*(e_i/3)^seqres$t_alt_count
seqres$LODT <- log((seqres$LMFM)/(seqres$LM0),10)
seqres$Candidates <- seqres$LODT> theta_t
seqres$Candidates[is.na(seqres$Candidates)] <- T
sum(seqres$Candidates)
seqres$LMFM_N <- (seqres$n_af*(e_i/3) + (1-seqres$n_af)*(1-e_i))^seqres$n_ref_count *
(seqres$n_af*(1-e_i)+(1-seqres$n_af)*(e_i/3))^seqres$n_alt_count
seqres$LM0_N <- (1-e_i)^seqres$n_ref_count * (1-seqres$n_af)*(e_i/3)^seqres$n_alt_count
seqres$LODT_N <- log(seqres$LMFM_N/seqres$LM0_N,10)
seqres$GermlineMuts <- seqres$LODT_N>theta_t
seqres$GermlineMuts[is.na(seqres$GermlineMuts)] <- T
sum(seqres$GermlineMuts)
seqres$somatic <- seqres$Candidates&(!seqres$GermlineMuts)
somaticVariants <- seqres[seqres$somatic,]
somaticVariants[order(-somaticVariants$t_af),]
sum(seqres$somatic)
head(seqres)
variantData <-read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
e_i <- 10^(-4) #error rate
theta_t <- 6.22 #decision threshold
var_file_problem_1 <-read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
e_i <- 10^(-4) #error rate
theta_t <- 6.22 #decision threshold
variant_data <- var_file_problem_1 %>%
mutate(d_n = n_alt_count+n_ref_count,
d_t = t_alt_count+t_ref_count,
f_n=n_alt_count/d_n,
f_t = t_alt_count/d_t,
log_null_lik_n = n_alt_count*log(e_i/3,base=10) + n_ref_count*log(1-e_i,base=10),
log_null_lik_t = t_alt_count* log(e_i/3,base=10) + t_ref_count*log(1-e_i,base=10),
log_alt_lik_n = n_ref_count*log(f_n*e_i/3+(1-f_n )*(1-e_i), base=10)
+ n_alt_count*log(f_n*(1-e_i)+(1-f_n)*e_i/3,base=10),
log_alt_lik_t = t_ref_count*log(f_t*e_i/3+(1-f_t )*(1-e_i), base=10)
+ t_alt_count*log(f_t*(1-e_i)+(1-f_t)*e_i/3, base=10),
log_ratio_n = log_alt_lik_n - log_null_lik_n,
log_ratio_t = log_alt_lik_t - log_null_lik_t,
lrt_n = ifelse(log_ratio_n>theta_t,1,0),
lrt_t = ifelse(log_ratio_t>theta_t,1,0)
)
library(dplyr)
variant_data <- var_file_problem_1 %>%
mutate(d_n = n_alt_count+n_ref_count,
d_t = t_alt_count+t_ref_count,
f_n=n_alt_count/d_n,
f_t = t_alt_count/d_t,
log_null_lik_n = n_alt_count*log(e_i/3,base=10) + n_ref_count*log(1-e_i,base=10),
log_null_lik_t = t_alt_count* log(e_i/3,base=10) + t_ref_count*log(1-e_i,base=10),
log_alt_lik_n = n_ref_count*log(f_n*e_i/3+(1-f_n )*(1-e_i), base=10)
+ n_alt_count*log(f_n*(1-e_i)+(1-f_n)*e_i/3,base=10),
log_alt_lik_t = t_ref_count*log(f_t*e_i/3+(1-f_t )*(1-e_i), base=10)
+ t_alt_count*log(f_t*(1-e_i)+(1-f_t)*e_i/3, base=10),
log_ratio_n = log_alt_lik_n - log_null_lik_n,
log_ratio_t = log_alt_lik_t - log_null_lik_t,
lrt_n = ifelse(log_ratio_n>theta_t,1,0),
lrt_t = ifelse(log_ratio_t>theta_t,1,0)
)
e_i <- 10^(-) #error rate
e_i <- 10^(-3) #error rate
theta_t <- 6.22 #decision threshold
# Conduct LRT for variant detection in tumor and normal for each line in dataset
variant_data <- var_file_problem_1 %>%
mutate(d_n = n_alt_count+n_ref_count,
d_t = t_alt_count+t_ref_count,
f_n=n_alt_count/d_n,
f_t = t_alt_count/d_t,
log_null_lik_n = n_alt_count*log(e_i/3,base=10) + n_ref_count*log(1-e_i,base=10),
log_null_lik_t = t_alt_count* log(e_i/3,base=10) + t_ref_count*log(1-e_i,base=10),
log_alt_lik_n = n_ref_count*log(f_n*e_i/3+(1-f_n )*(1-e_i), base=10)
+ n_alt_count*log(f_n*(1-e_i)+(1-f_n)*e_i/3,base=10),
log_alt_lik_t = t_ref_count*log(f_t*e_i/3+(1-f_t )*(1-e_i), base=10)
+ t_alt_count*log(f_t*(1-e_i)+(1-f_t)*e_i/3, base=10),
log_ratio_n = log_alt_lik_n - log_null_lik_n,
log_ratio_t = log_alt_lik_t - log_null_lik_t,
lrt_n = ifelse(log_ratio_n>theta_t,1,0),
lrt_t = ifelse(log_ratio_t>theta_t,1,0)
)
nrow(variant_data)
nrow(candidate_variants)
candidate_variants <- variant_data %>% filter(lrt_t==1)
nrow(candidate_variants)
seqres <- read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
e_i <- .0001
theta_t <- 6.3
seqres$t_af <- seqres$t_alt_count/(seqres$t_ref_count+seqres$t_alt_count)
seqres$n_af <- seqres$n_alt_count/(seqres$n_ref_count+seqres$n_alt_count)
seqres$LMFM <- (seqres$t_af*(e_i/3) + (1-seqres$t_af)*(1-e_i))^seqres$t_ref_count *
(seqres$t_af*(1-e_i)+(1-seqres$t_af)*(e_i/3))^seqres$t_alt_count
seqres$LM0 <- (1-e_i)^seqres$t_ref_count * (1-seqres$t_af)*(e_i/3)^seqres$t_alt_count
seqres$LODT <- log((seqres$LMFM)/(seqres$LM0),10)
seqres$Candidates <- seqres$LODT> theta_t
seqres$Candidates[is.na(seqres$Candidates)] <- T
sum(seqres$Candidates)
seqres$LMFM_N <- (seqres$n_af*(e_i/3) + (1-seqres$n_af)*(1-e_i))^seqres$n_ref_count *
(seqres$n_af*(1-e_i)+(1-seqres$n_af)*(e_i/3))^seqres$n_alt_count
seqres$LM0_N <- (1-e_i)^seqres$n_ref_count * (1-seqres$n_af)*(e_i/3)^seqres$n_alt_count
seqres$LODT_N <- log(seqres$LMFM_N/seqres$LM0_N,10)
seqres$GermlineMuts <- seqres$LODT_N>theta_t
seqres$GermlineMuts[is.na(seqres$GermlineMuts)] <- T
sum(seqres$GermlineMuts)
seqres$somatic <- seqres$Candidates&(!seqres$GermlineMuts)
somaticVariants <- seqres[seqres$somatic,]
somaticVariants[order(-somaticVariants$t_af),]
sum(seqres$somatic)
data <-read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
attach(data)
e=0.0001
f0=0
P.r0=f0*e/3+(1-f0)*(1-e)
P.m0=f0*(1-e)+(1-f0)*e/3
L.M0=(P.r0^t_ref_count)*(P.m0^t_alt_count)
f1_t=t_alt_count/(t_ref_count+t_alt_count)
P.r1=f1_t*e/3+(1-f1_t)*(1-e)
P.m1=f1_t*(1-e)+(1-f1_t)*e/3
L.M1=(P.r1^t_ref_count)*(P.m1^t_alt_count)
LR_t=log10(L.M1/L.M0)
outcome_t=ifelse(LR_t>=6.22,1,0)
f0=0
P.r0=f0*e/3+(1-f0)*(1-e)
P.m0=f0*(1-e)+(1-f0)*e/3
L.M0_n=(P.r0^n_ref_count)*(P.m0^n_alt_count)
L.M0_n
f1=0.5
P.r1=f1*e/3+(1-f1)*(1-e)
P.m1=f1*(1-e)+(1-f1)*e/3
L.M1_n=(P.r1^n_ref_count)*(P.m1^n_alt_count)
LR_n=log10(L.M0_n/L.M1_n)
outcome_n=ifelse(LR_n>=2.2,1,0)
data2=cbind(data,outcome_t,outcome_n, LR_n, f1_t)
head(data2)
data3=data2[outcome_t==1,]
dim(data3)
outcome_t
data4=data2[outcome_t==1 & outcome_n==1,]
data4
dim(data4)
P.m0
f0
e
P.m0=f0*(1-e)+(1-f0)*e/3
P.m0
LR_n=log10(L.M0_n/L.M1_n)
LR_n
outcome_n=ifelse(LR_n>=2.2,1,0)
outcome_n
LR_n
mutation <-read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
variant<-c()
somatic<-c()
normalfreq<-c()
tumorfreq<-c()
normalfreq= as.numeric(mutation$n_alt_count)/(as.numeric(mutation$n_alt_count) + as.numeric(mutation$n_ref_count))
tumorfreq=as.numeric(mutation$t_alt_count)/(as.numeric(mutation$t_alt_count)+as.numeric(mutation$t_ref_count))
normalstat<-c()
tumorstat<-c()
e=10**(-4)
normalstat=(mutation$n_ref_count*log(normalfreq*e/3+(1-normalfreq)*(1-e),10) + mutation$n_alt_count*log(normalfreq*e/3+(1-normalfreq)*(1-e),10) - mutation$n_ref_count*(log(1-e,10)) - mutation$n_alt_count*log(e/3,10))
tumorstat=(mutation$t_ref_count*log(tumorfreq*e/3+(1-tumorfreq)*(1-e),10) + mutation$t_alt_count*log(tumorfreq*e/3+(1-tumorfreq)*(1-e),10) - mutation$t_ref_count*(log(1-e,10)) - mutation$t_alt_count*log(e/3,10))
tumorstat
for (i in 1:dim(mutation)[1]){
if (normalstat[i]<6.22 & tumorstat[i]>=6.22){
somatic<-append(somatic,"TRUE")
}
else somatic<-append(somatic,"FALSE")
if (tumorstat[i]>=6.22){
variant<-append(variant,"TRUE")
}
else variant<-append(variant,"FALSE")
}
mutation=cbind(mutation,variant,somatic)
variants<-subset(mutation,mutation[,10]=="TRUE")
somatics<-subset(mutation,mutation[,11]=="TRUE")
dim(somatics)
dim(tumorstat)
length(tumorstat)
tumorstat[1:10]
head(seqres)
tumorfreq[1:5]
e
mutation$t_ref_count[1]
plot(seqres$LODT,tumorstat)
max(tumorstat)
which.max(tumorstat)
e_i <- 10^(-40/10)
t_theta <- 6.3
n_theta_dbsnp <- 5.5
n_theta_non <- 2.2
dfhw <- read.table("~/gd/Harvard/BST283/BST283_Hw1/var_file_problem_1.txt", header=T)
attach(dfhw)
for (i in 1:nrow(dfhw)){
#proportions
dfhw$t_p_ref[i] <- t_ref_count[i]/(t_ref_count[i]+t_alt_count[i])
dfhw$t_p_alt[i] <- t_alt_count[i]/(t_ref_count[i]+t_alt_count[i])
#estimated fs
dfhw$t_f_hat_hyp1[i] <- dfhw$t_p_alt[i]
dfhw$t_f_hat_hyp0[i] <- 0
#likelihoods
dfhw$t_lh_hyp1[i] <- ((dfhw$t_f_hat_hyp1[i]*e_i/3 + (1-dfhw$t_f_hat_hyp1[i])*(1-e_i))^(t_ref_count[i]))*((dfhw$t_f_hat_hyp1[i]*(1-e_i)+(1-dfhw$t_f_hat_hyp1[i])*e_i/3)^(t_alt_count[i]))
dfhw$t_lh_hyp0[i] <- ((1*(1-e_i))^(t_ref_count[i]))*((1*e_i/3)^(t_alt_count[i]))
#LOD score
dfhw$t_lod[i] <- log10(dfhw$t_lh_hyp1[i]/dfhw$t_lh_hyp0[i])
#1 = Candidate
if (dfhw$t_lod[i]>=t_theta) {dfhw$candidiate[i] <- 1}
else if (dfhw$t_lod[i]<t_theta) {dfhw$candidate[i] <- 0}
}
head(dfhw)
dfhwcand <- subset(dfhw, dfhw$candidiate==1)
dfhwcand
motifFile <- "~/gd/Harvard/Research/data/Eclipse/ECLIPSE_Blood_Motif.txt"
exprFile <- "~/gd/Harvard/Research/data/COPDGene/COPDGene_GSExpressionData.txt"
clinicalFile <- "~/gd/Harvard/Research/data/COPDGene/COPDGene_clinical.txt"
casesString <- "COPD Subjects"
controlsString <- "Smoker Controls"
phenotypeName <- "Subject.type"
