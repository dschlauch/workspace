diag(adjMat) <- 0
adjMat.melt <- melt(adjMat)
adj.combined <- merge(tm.sigmas.melt,adjMat.melt, by=c("Var1","Var2"))
# adj.combined[,1] <- mappings[match(adj.combined[,1], mappings[,1]),2]
# adj.combined[,2] <- mappings[match(adj.combined[,2], mappings[,1]),2]
topTFsIncluded <- names(sort(dTFI_pVals_All)[1:numTopTFs])
topTFIndices <- 2>(is.na(match(adj.combined[,1],topTFsIncluded))+is.na(match(adj.combined[,2],topTFsIncluded)))
adj.combined <- adj.combined[topTFIndices,]
adj.combined <- adj.combined[abs(adj.combined[,4])>=sort(abs(adj.combined[,4]),decreasing=T)[numEdges],]
tfNet <- graph.data.frame(adj.combined, directed=T)
vSize <- -log(dTFI_pVals_All)
vSize[vSize<0] <- 0
vSize[vSize>3] <- 3
V(tfNet)$size <- vSize[V(tfNet)$name]*5
E(tfNet)$width <- (abs(E(tfNet)$value.x))*15/max(abs(E(tfNet)$value.x))
E(tfNet)$color<-ifelse(E(tfNet)$value.x>0, "blue", "red")
plot.igraph(tfNet, edge.arrow.size=2, vertex.label.cex= 1.5, vertex.label.color= "black",main="")
V(tfNet)$color <- "yellow"
plot.igraph(tfNet, edge.arrow.size=2, vertex.label.cex= 1.5, vertex.label.color= "black",main="")
numEdges  <- 100
numTopTFs <- 10
## Calculate p-values for off-diagonals
transitionSigmas <- function(tm.observed, tm.null){
tm.null.mean <- apply(simplify2array(tm.null), 1:2, mean)
tm.null.sd <- apply(simplify2array(tm.null), 1:2, sd)
sigmas <- (tm.observed - tm.null.mean)/tm.null.sd
}
tm.sigmas <- transitionSigmas(transMatrices[[1]], transMatrices[-1])
diag(tm.sigmas) <- 0
tm.sigmas.melt <- melt(tm.sigmas)
adjMat <- transMatrices[[1]]
diag(adjMat) <- 0
adjMat.melt <- melt(adjMat)
adj.combined <- merge(tm.sigmas.melt,adjMat.melt, by=c("Var1","Var2"))
# adj.combined[,1] <- mappings[match(adj.combined[,1], mappings[,1]),2]
# adj.combined[,2] <- mappings[match(adj.combined[,2], mappings[,1]),2]
topTFsIncluded <- names(sort(dTFI_pVals_All)[1:numTopTFs])
topTFIndices <- 2>(is.na(match(adj.combined[,1],topTFsIncluded))+is.na(match(adj.combined[,2],topTFsIncluded)))
adj.combined <- adj.combined[topTFIndices,]
adj.combined <- adj.combined[abs(adj.combined[,4])>=sort(abs(adj.combined[,4]),decreasing=T)[numEdges],]
tfNet <- graph.data.frame(adj.combined, directed=T)
vSize <- -log(dTFI_pVals_All)
vSize[vSize<0] <- 0
vSize[vSize>3] <- 3
V(tfNet)$size <- vSize[V(tfNet)$name]*5
V(tfNet)$color <- "yellow"
E(tfNet)$width <- (abs(E(tfNet)$value.x))*15/max(abs(E(tfNet)$value.x))
E(tfNet)$color<-ifelse(E(tfNet)$value.x>0, "blue", "red")
pdf(file.path(outputDir,paste('Transition plot',analysisCode,'.pdf', sep="")), width=15, height=15)
plot.igraph(tfNet, edge.arrow.size=2, vertex.label.cex= 1.5, vertex.label.color= "black",main="")
dev.off()
getwd()
outputDir <- "~/gd/Harvard/Research/R_workspace/TM_manuscript/figures/"
pdf(file.path(outputDir,paste('Transition_plot',analysisCode,'.pdf', sep="")), width=15, height=15)
plot.igraph(tfNet, edge.arrow.size=2, vertex.label.cex= 1.5, vertex.label.color= "black",main="")
dev.off()
png(file.path(outputDir,paste('Transition_plot',analysisCode,'.png', sep="")), width=900, height=900)
plot.igraph(tfNet, edge.arrow.size=2, vertex.label.cex= 1.5, vertex.label.color= "black",main="")
dev.off()
library(ggplot2)
library(data.table)
setwd('~')
outputDir <- "NI_only_0001"
generateNIDifferencePlot <- function(datasetA, datasetB, niMethod, imageType=png){
datasetACases <- readRDS(file.path(outputDir, paste0(datasetA, '_cases_', niMethod, '_network.rds')))
datasetAControls <- readRDS(file.path(outputDir, paste0(datasetA, '_controls_', niMethod, '_network.rds')))
datasetBCases <- readRDS(file.path(outputDir, paste0(datasetB, '_cases_', niMethod, '_network.rds')))
datasetBControls <- readRDS(file.path(outputDir, paste0(datasetB, '_controls_', niMethod, '_network.rds')))
matchedTFs <- intersect(rownames(datasetACases),rownames(datasetBCases))
matchedGenes <- intersect(colnames(datasetACases),colnames(datasetBCases))
datasetACases    <- datasetACases[matchedTFs,matchedGenes]
datasetAControls <- datasetAControls[matchedTFs,matchedGenes]
datasetBCases    <- datasetBCases[matchedTFs,matchedGenes]
datasetBControls <- datasetBControls[matchedTFs,matchedGenes]
df <- data.frame(dataA=c(datasetACases)-c(datasetAControls), dataB=c(datasetBCases)-c(datasetBControls), studyA=datasetA, studyB=datasetB, method=niMethod)
#   spearCor <- cor(df[,1],df[,2],method="spearman")
#   corText <- paste0("r[s]==",round(spearCor,4))
#   print(spearCor)
#   imageType(file.path(outputDir,"plots",paste(datasetA, datasetB, niMethod, 'edgeweight_difference_comparison.png', sep="_")))
#   plot <- ggplot(df, aes(x=dataA, y=dataB)) +
#     geom_point(size=.1, alpha=.1) + xlab(datasetA) + ylab(datasetB) + ggtitle(paste0(niMethod, " edge weight differences (", datasetA," vs ", datasetB, ")")) + theme_classic()+
#     annotate("text", x=Inf, y=-Inf, hjust=1, , vjust=-1, label=corText, parse=TRUE, size=8)
#   print(plot)
#   dev.off()
df
}
studies <- c("ECLIPSE", "COPDGENE", "LGRC", "LTCOPD")
niMethods <- c("WGCNA","CLR","MONSTER","ARACNE")
combinedDT <- readRDS(file.path(outputDir,"allStudiesNIResults.rds"))
dim(combinedDT)
set(combinedDT,which(DT[["method"]]=="bere"),"method","MONSTER")
set(combinedDT,which(combinedDT[["method"]]=="bere"),"method","MONSTER")
combinedDT
motifFile <- "~/gd/Harvard/Research/data/Eclipse/ECLIPSE_Blood_Motif.txt"
study <- "ECLIPSE"
motifVersion <- "JASPAR2014"
source('~/gd/Harvard/Research/R_workspace/load_TM_data.R')
library(bereR)
source('~/gd/Harvard/Research/R_workspace/load_TM_data.R')
dim(dataset$motif)
studyCorrelations <- data.frame(t(apply(combn(studies,2), 2, function(x){
sapply(niMethods, function(niMethod){
includerows <- combinedDT$studyA==x[1] & combinedDT$studyB==x[2] & combinedDT$method==niMethod
dt <- subset(combinedDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)),niMethod)
})
})))
dim(dataset$motif)
unique(dataset$motif[,1])
unique(dataset$motif[,2])
dim(dataset$motif)
studies <- c("ECLIPSE", "COPDGENE", "LGRC", "LTCOPD")
apply(combn(studies,2), 2, function(x){list(a=4)})
library(ggplot2)
library(data.table)
setwd('~')
outputDir <- "NI_only_0001"
generateNIDifferencePlot <- function(datasetA, datasetB, niMethod, imageType=png){
datasetACases <- readRDS(file.path(outputDir, paste0(datasetA, '_cases_', niMethod, '_network.rds')))
datasetAControls <- readRDS(file.path(outputDir, paste0(datasetA, '_controls_', niMethod, '_network.rds')))
datasetBCases <- readRDS(file.path(outputDir, paste0(datasetB, '_cases_', niMethod, '_network.rds')))
datasetBControls <- readRDS(file.path(outputDir, paste0(datasetB, '_controls_', niMethod, '_network.rds')))
matchedTFs <- intersect(rownames(datasetACases),rownames(datasetBCases))
matchedGenes <- intersect(colnames(datasetACases),colnames(datasetBCases))
datasetACases    <- datasetACases[matchedTFs,matchedGenes]
datasetAControls <- datasetAControls[matchedTFs,matchedGenes]
datasetBCases    <- datasetBCases[matchedTFs,matchedGenes]
datasetBControls <- datasetBControls[matchedTFs,matchedGenes]
df <- data.frame(dataA=c(datasetACases)-c(datasetAControls), dataB=c(datasetBCases)-c(datasetBControls), studyA=datasetA, studyB=datasetB, method=niMethod)
#   spearCor <- cor(df[,1],df[,2],method="spearman")
#   corText <- paste0("r[s]==",round(spearCor,4))
#   print(spearCor)
#   imageType(file.path(outputDir,"plots",paste(datasetA, datasetB, niMethod, 'edgeweight_difference_comparison.png', sep="_")))
#   plot <- ggplot(df, aes(x=dataA, y=dataB)) +
#     geom_point(size=.1, alpha=.1) + xlab(datasetA) + ylab(datasetB) + ggtitle(paste0(niMethod, " edge weight differences (", datasetA," vs ", datasetB, ")")) + theme_classic()+
#     annotate("text", x=Inf, y=-Inf, hjust=1, , vjust=-1, label=corText, parse=TRUE, size=8)
#   print(plot)
#   dev.off()
df
}
studies <- c("ECLIPSE", "COPDGENE", "LGRC", "LTCOPD")
niMethods <- c("WGCNA","CLR","MONSTER","ARACNE")
resultsList <- lapply(niMethods, function(meth){
do.call(rbind(apply(combn(studies,2), 2, function(x){
print(x)
generateNIDifferencePlot(x[1],x[2],meth)
}))
})
studies <- c("ECLIPSE", "COPDGENE", "LGRC", "LTCOPD")
niMethods <- c("WGCNA","CLR","MONSTER","ARACNE")
resultsList <- lapply(niMethods, function(meth){
do.call(rbind(apply(combn(studies,2), 2, function(x){
print(x)
generateNIDifferencePlot(x[1],x[2],meth)
})))
})
studies <- c("ECLIPSE", "COPDGENE", "LGRC", "LTCOPD")
niMethods <- c("WGCNA","CLR","MONSTER","ARACNE")
resultsList <- lapply(niMethods, function(meth){
do.call(rbind, apply(combn(studies,2), 2, function(x){
print(x)
generateNIDifferencePlot(x[1],x[2],meth)
}))
})
length(resultsList)
dim(resultsList[[1]])
studies <- c("ECLIPSE", "COPDGENE", "LGRC", "LTCOPD")
niMethods <- c("WGCNA","CLR","MONSTER","ARACNE")
resultsList <- lapply(niMethods, function(meth){
data.table(do.call(rbind, apply(combn(studies,2), 2, function(x){
print(x)
generateNIDifferencePlot(x[1],x[2],meth)
})))
})
dim(resultsList[[1]])
class(resultsList[[1]])
resultsList[[1]]
studyCorrelations <- lapply(resultsList, function(resDT){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(combinedDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)),niMethod)
})
studyCorrelations <- lapply(resultsList, function(resDT){
apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(combinedDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)),niMethod)
})
})
studyCorrelations <- lapply(resultsList, function(resDT){
apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)),niMethod)
})
})
studyCorrelations <- lapply(resultsList, function(resDT){
apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)))
})
})
studyCorrelations
studyCorrelations <- do.call(rbind,t(lapply(resultsList, function(resDT){
apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)))
})
})))
studyCorrelations
studyCorrelations <- do.call(rbind,lapply(resultsList, function(resDT){
t(apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)))
}))
}))
studyCorrelations
colnames(studyCorrelations) <- c("studyA","studyB","corText")
studyCorrelations
resultsList <- lapply(resultsList, function(x){x[c(rep(F,99),T)]})
length(resultsList)
seq_along(niMethods)
resultsList[[1]]
niMethods
studyCorrelations
min(resultsList[,dataB])
resultsList
min(resultsList[[i]][,dataB])
min(resultsList[[1]][,dataB])
min(resultsList[[3]][,dataB])
rep(niMethods,each=6)
studyCorrelations$method <- rep(niMethods,each=6)
studyCorrelations
studyCorrelations <- do.call(rbind,lapply(resultsList, function(resDT){
t(apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)))
}))
}))
studyCorrelations
rep(niMethods,each=6)
studyCorrelations$method <- rep(niMethods,each=6)
studyCorrelations <- do.call(rbind,lapply(resultsList, function(resDT){
t(apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)))
}))
}))
class(studyCorrelations)
studyCorrelations <- data.table(do.call(rbind,lapply(resultsList, function(resDT){
t(apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)))
}))
})))
colnames(studyCorrelations) <- c("studyA","studyB","corText")
studyCorrelations[['method']] <- rep(niMethods,each=6)
studyCorrelations
studyCorrelations[method=="ARACNE"]
lapply(seq_along(niMethods), function(i){
tiff(file.path(outputDir,"plots",paste("all_studies", niMethods[i], 'edgeweight_difference_comparison.tiff', sep="_")),height=2000,width=2000, units = "px", res = 400)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
dev.off()
})
outputDir
resultsList[[1]]
resultsList[[1]][studyA]
resultsList[[1]]['studyA']
resultsList[[1]]['studyA',]
resultsList[[1]][,'studyA']
resultsList[[1]]['studyA']
resultsList[[1]][['studyA']]
resultsList[[1]][['studyB']]
resultsList[[1]][[1]]
resultsList[[1]][[2]]
resultsList[[1]][[3]]
resultsList[[1]][[4]]
class(resultsList[[1]])
resultsList[[1]][['studyA']] <- factor(resultsList[[1]][['studyA']], levels=studies)
resultsList[[1]][['studyB']] <- factor(resultsList[[1]][['studyB']], levels=studies)
resultsList[[1]][[3]]
lapply(seq_along(niMethods), function(i){
tiff(file.path(outputDir,"plots",paste("all_studies", niMethods[i], 'edgeweight_difference_comparison.tiff', sep="_")),height=2000,width=2000, units = "px", res = 400)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
dev.off()
})
# generateNIDifferencePlot("ECLIPSE","COPDGENE","
resultsList[[1]][[4]]
resultsList[[2]][[4]]
resultsList[[2]][[3]]
resultsList[[2]][[4]]
lapply(seq_along(niMethods), function(i){
resultsList[[i]][['studyA']] <- factor(resultsList[[i]][['studyA']], levels=studies)
resultsList[[i]][['studyB']] <- factor(resultsList[[i]][['studyB']], levels=studies)
tiff(file.path(outputDir,"plots",paste("all_studies", niMethods[i], 'edgeweight_difference_comparison.tiff', sep="_")),height=2000,width=2000, units = "px", res = 400)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
dev.off()
})
i<-1
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyB ~ studyA) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
resultsList[[i]]$studyA
resultsList[[i]]$studyB
factor(resultsList[[i]]$studyB)
class(resultsList[[i]]$studyB)
class(resultsList[[i]]$studyA)
resultsList[[i]]$studyA
factosresultsList[[i]]$studyA)
factor(resultsList[[i]]$studyA)
factor(resultsList[[i]]$studyA)
factor(resultsList[[i]]$studyB)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
#     xlab("") + ylab("") +
#     geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) #+
#     xlab("") + ylab("") +
#     geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) #\+
xlab("") + ylab("") #+
#     geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) #\+
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0) + facet_grid(studyA ~ studyB)
print(plot)
studyCorrelations
studyCorrelations
studyCorrelations[[1]]
studyCorrelations[[1]] <- factor(studyCorrelations, levels=studies)
studyCorrelations
studyCorrelations <- data.table(do.call(rbind,lapply(resultsList, function(resDT){
t(apply(combn(studies,2), 2, function(x){
includerows <- resDT$studyA==x[1] & resDT$studyB==x[2]
dt <- subset(resDT, includerows)
c(x[1],x[2], paste0("r=",round(cor(dt[,dataA],dt[,dataB]),4)))
}))
})))
colnames(studyCorrelations) <- c("studyA","studyB","corText")
studyCorrelations[['method']] <- rep(niMethods,each=6)
studyCorrelations
studyCorrelations[[1]] <- factor(studyCorrelations[[1]], levels=studies)
studyCorrelations[[2]] <- factor(studyCorrelations[[2]], levels=studies)
studyCorrelations
studyCorrelations[[2]]
lapply(seq_along(niMethods), function(i){
resultsList[[i]][['studyA']] <- factor(resultsList[[i]][['studyA']], levels=studies)
resultsList[[i]][['studyB']] <- factor(resultsList[[i]][['studyB']], levels=studies)
tiff(file.path(outputDir,"plots",paste("all_studies", niMethods[i], 'edgeweight_difference_comparison.tiff', sep="_")),height=2000,width=2000, units = "px", res = 400)
plot <- ggplot(resultsList[[i]], aes(x=dataA, y=dataB)) + facet_grid(studyA ~ studyB) +
geom_point(size=.1, alpha=.6, col="blue") +
ggtitle(paste0(niMethods[i], " edge weight differences between pairs of studies")) +
theme_bw() + theme(plot.title = element_text(size=11, face="bold")) +
xlab("") + ylab("") +
geom_text(data = studyCorrelations[method==niMethods[i]], aes(x=min(resultsList[[i]][,dataA]),y=max(min(resultsList[[i]][,dataB])),label =corText), size=3,hjust=0,vjust=0)
print(plot)
dev.off()
})
source('~/gd/Harvard/Research/R_workspace/generate_NI_plots.R')
motifFile <- "~/gd/Harvard/Research/data/Eclipse/ECLIPSE_Blood_Motif.txt"
dataset$motif    <- read.table(motifFile,header=F)
dataset$exp      <- read.table(exprFile,row.names=1,header=T)
a<-read.table(motifFile,header=F)
dim(a)
unique(a[,1])
motifFile
a<-read.table("~/Downloads/ECLIPSE_Blood_Motif.txt",header=F)
unique(a[,1])
study <- "ECLIPSE"
motifVersion <- "JASPAR2014"
source('~/gd/Harvard/Research/R_workspace/load_TM_data.R')
library(bereR)
source('~/gd/Harvard/Research/R_workspace/load_TM_data.R')
dim(dataset$motif)
eclipseMotif <- dataset$motif
study <- "COPDGene"
source('~/gd/Harvard/Research/R_workspace/load_TM_data.R')
copdGeneMotif <- dataset$motif
dim(copdGeneMotif)
dataset$motif    <- read.table(motifFile,header=F)
dim(copdGeneMotif)
length(unique(copdGeneMotif[,2])
)
dim(dataset$exp)
study <- "LGRC"
source('~/gd/Harvard/Research/R_workspace/load_TM_data.R')
dim(dataset$exp)
lgrcMotif <- dataset$motif
dim(lgrcMotif)
length(unique(lgrcMotif[,1]))
length(unique(lgrcMotif[,2]))
unique(lgrcMotif[,1])
unique(lgrcMotif[,1])%in%rownames(dataset$exp)
sum(unique(lgrcMotif[,1])%in%rownames(dataset$exp))
load("~/gd/Harvard/Research/TM_outputs/LGRC_bere_56432/activeImage56432.RData")
lgrc_TM <- transMatrices[[1]]
dim(lgrc_TM)
lgrc_TM
library(ggplot2)
library(gridExtra)
library(ggExtra)
library(gtable)
library(VennDiagram)
analysisNames <- c("ECLIPSE_combined_runs","COPDGene_combined_runs", "LGRC_combined_runs","LTCOPD_combined_runs")
displayNames <- c("ECLIPSE","COPDGene","LGRC","LTCOPD")
baseDir <- "~/gd/Harvard/Research/TM_outputs/JASPAR2014/BERE/"
outputDir <- './'
setwd(baseDir)
filenames <- sapply(analysisNames, function(aname){
dir(paste0(baseDir,aname), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
})
resultTables <- lapply(filenames, read.csv)
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- rank(x$dTFI.normalized.scores)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
x$limma <- exp(-(x$limma))
x$negLogPValues <- -log(x$dTFI.normalized.scores)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x
})
merged.data.frame = Reduce(function(...) merge(..., by=1,all=T), resultTables)
dim(merged.data.frame)
resultTables
length(resultTables)
dim(resultTables[[1]])
dim(resultTables[[2]])
dim(resultTables[[3]])
dim(resultTables[[4]])
dim(merged.data.frame)
apply(merged.data.frame,1,sum)
apply(merged.data.frame,1,is.na)
apply(merged.data.frame,1,function(x){all(is.na(x))})
sum(apply(merged.data.frame,1,function(x){all(is.na(x))}))
all(is.na(c(T,T,T)))
sum(apply(merged.data.frame,1,function(x){all(!is.na(x))}))
apply(merged.data.frame,1,function(x){all(!is.na(x))})
study <- "ECLIPSE"
source('~/gd/Harvard/Research/R_workspace/load_TM_data.R')
unique(dataset$motif[,1])%in%rownames(dataset$exp)
sum(unique(dataset$motif[,1])%in%rownames(dataset$exp))
