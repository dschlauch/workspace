null.SSODM.melt <- melt(combined.mat)[,-1][,c(2,1)]
null.SSODM.melt$TF<-rep(rownames(tm.null[[1]]),num.iterations+1)
## Plot the data
ggplot(null.SSODM.melt, aes(x=TF, y=value))+
geom_point(aes(size=1,color=factor(Var2),alpha = .5*as.numeric(factor(Var2)))) +
scale_color_manual(values = c("blue", "red")) +
scale_x_discrete(limits = x.axis.order ) +
theme(legend.title=element_blank(),axis.text.x = element_text(colour = 1+x.axis.order%in%highlight.tfs, angle = 90, hjust = 1, size=x.axis.size,face="bold")) +
ylab("Sum of Squared Off-Diagonal Mass") +
ggtitle(plot.title)
}
ssodm.plot(transMatrices[[1]], transMatrices[-1], rescale=T, plot.title=paste("SSODM observed and null, ",casesString," vs ",controlsString,' : ', networkInferenceName, ' : ', analysisName, sep=""))
controlsString
ssodm.plot <- function(tm.obs, tm.null, sort.by.sig=F, rescale=F, plot.title=NA, highlight.tfs=NA){
if(is.na(plot.title)){
plot.title <- "SSODM observed and null"
}
num.iterations <- length(tm.null)
# Calculate the off-diagonal squared mass for each transition matrix
null.SSODM <- lapply(tm.null,function(x){
apply(x,2,function(y){t(y)%*%y})
})
null.ssodm.matrix <- matrix(unlist(null.SSODM),ncol=num.iterations)
null.ssodm.matrix <- t(apply(null.ssodm.matrix,1,sort))
ssodm <- apply(tm.obs,2,function(x){t(x)%*%x})
# Get p-value (rank of observed within null ssodm)
#   p.values <- sapply(1:length(ssodm),function(i){
#     1-findInterval(ssodm[i], null.ssodm.matrix[i,])/num.iterations
#   })
p.values <- 1-pnorm(sapply(1:length(ssodm),function(i){
(ssodm[i]-mean(null.ssodm.matrix[i,]))/sd(null.ssodm.matrix[i,])
}))
t.values <- sapply(1:length(ssodm),function(i){
(ssodm[i]-mean(null.ssodm.matrix[i,]))/sd(null.ssodm.matrix[i,])
})
# Process the data for ggplot2
combined.mat <- cbind(null.ssodm.matrix, ssodm)
colnames(combined.mat) <- c(rep('Null',num.iterations),"Observed")
if (rescale){
combined.mat <- t(apply(combined.mat,1,function(x){
(x-mean(x[-(num.iterations+1)]))/sd(x[-(num.iterations+1)])
}))
x.axis.order <- rownames(tm.null[[1]])[order(-t.values)]
x.axis.size  <- 10 # pmin(15,7-log(p.values[order(p.values)]))
} else {
x.axis.order <- rownames(tm.null[[1]])
x.axis.size  <- pmin(15,7-log(p.values))
}
null.SSODM.melt <- melt(combined.mat)[,-1][,c(2,1)]
null.SSODM.melt$TF<-rep(rownames(tm.null[[1]]),num.iterations+1)
## Plot the data
ggplot(null.SSODM.melt, aes(x=TF, y=value))+
geom_point(aes(size=1,color=factor(Var2),alpha = .5*as.numeric(factor(Var2)))) +
scale_color_manual(values = c("blue", "red")) +
scale_x_discrete(limits = x.axis.order ) +
theme(legend.title=element_blank(),axis.text.x = element_text(colour = 1+x.axis.order%in%highlight.tfs, angle = 90, hjust = 1, size=x.axis.size,face="bold")) +
ylab("Sum of Squared Off-Diagonal Mass") +
ggtitle(plot.title)
}
ssodm.plot(transMatrices[[1]], transMatrices[-1], rescale=T, plot.title=paste("SSODM observed and null, ",casesString," vs ",controlsString,' : ', networkInferenceName, ' : ', analysisName, sep=""))
library(bptools)
ssodm.plot
rm(ssodm.plot)
ssodm.plot
ssodm.plot(transMatrices[[1]], transMatrices[-1], rescale=T, plot.title=paste("SSODM observed and null, ",casesString," vs ",controlsString,' : ', networkInferenceName, ' : ', analysisName, sep=""))
meanTransition <- rowMeans(transMatrices[[1]])
methDifferences <- diffGeneMethPValues[1,]-diffGeneMethPValues[2,]
matched_TF_Meth <- intersect(colnames(diffGeneMethPValues),names(obsSsodm))
plot(diffGeneMethPValues[3,matched_TF_Meth],dTFI_pVals_All[matched_TF_Meth])
summary(lm(diffGeneMethPValues[3,matched_TF_Meth]~dTFI_pVals_All[matched_TF_Meth]))
methDifferences
plot(diffGeneMethPValues[matched_TF_Meth],meanTransition[matched_TF_Meth])
plot(methDifferences[matched_TF_Meth],meanTransition[matched_TF_Meth])
summary(lm(methDifferences[matched_TF_Meth]~meanTransition[matched_TF_Meth]))
analysisNames <- c("ECLIPSE_bere_bare_55557","LGRC_bere_38678","COPDGene_bere_70856")
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
source('~/.active-rstudio-document', echo=TRUE)
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R', echo=TRUE)
source('~/gd/Harvard/Research/R_workspace/homogeneity_assessment.R')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
grid.arrange(list(plot1, plot2, plot3), ncol=3, top="Comparison of Differential TF Involvement Across Studies")
grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies")
displayNames <- c("ECLIPSE","LGRC","COPDGene")
makeComparisonPlot <- function(pair){
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) min(...,na.rm=T)) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point() + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
makeComparisonPlot(c(1,2))
plot(makeComparisonPlot(c(1,2)))
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies")
pair <- c(1,2)
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) min(...,na.rm=T)) < plotTopNTFs
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) min(...,na.rm=T)) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point() + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies")
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) min(...,na.rm=T)) < plotTopNTFs
apply(merged.data.frame[,filterColIndices[pair]],1,function(...) min(...,na.rm=T))
merged.data.frame[,filterColIndices[pair]]
min(NA,NA)
min(NA,NA,na.rm=T)
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) min(...,na.rm=T)) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point() + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) min(...,na.rm=T)) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point() + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
?min
min(NA,NA,na.rm=T)
suppressWarnings(min(NA,NA,na.rm=T))
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies")
getwd()
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 + geom_point(colour = "blue") + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1 <- plot1 + geom_point(colour = "blue", size=2) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(colour = "blue", size=20) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(colour = "blue", size=6, alpha=.5) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(colour = "blue", size=3, alpha=.5) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(colour = "blue", size=2, alpha=.5) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(aes(colour = "blue", size=2, alpha=.5)) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
dev.off()
plot1 <- plot1 + geom_point(aes(colour = "blue", size=2, alpha=.5)) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(aes(colour = "blue", size=2)) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(aes(colour = "blue", alpha=.5)) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(aes(colour = "blue", alpha=.5)) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- plot1 + geom_point(aes(alpha=.5),colour = "blue") + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(aes(alpha=.5)) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(alpha=.5) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
plot1
# Include labels for any TFs that are in the top 15 of any list
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies")
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
# Include labels for any TFs that are in the top 15 of any list
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies")
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
# Include labels for any TFs that are in the top 15 of any list
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
source('~/.active-rstudio-document')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
?grid.arrange
library("ggExtra")
install.packages('ggExtra')
library("ggExtra")
set.seed(1234)
x <- c(rnorm(500, mean = -1), rnorm(500, mean = 1.5))
y <- c(rnorm(500, mean = 1), rnorm(500, mean = 1.7))
df3 <- data.frame(x, y)
# Scatter plot of x and y variables and color by groups
sp2 <- ggplot(df3,aes(x, y)) + geom_point()
# Marginal density plot
ggMarginal(sp2 + theme_gray())
ggMarginal(sp2)
library("ggExtra")
# Create some data
set.seed(1234)
x <- c(rnorm(500, mean = -1), rnorm(500, mean = 1.5))
y <- c(rnorm(500, mean = 1), rnorm(500, mean = 1.7))
df3 <- data.frame(x, y)
# Scatter plot of x and y variables and color by groups
sp2 <- ggplot(df3,aes(x, y)) + geom_point()
# Marginal density plot
ggMarginal(sp2)
ggMarginal(sp2)
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
plot1 <- ggMarginal(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
# Include labels for any TFs that are in the top 15 of any list
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggMarginal(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
}
plot1 <- makeComparisonPlot(c(1,2))
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
# Include labels for any TFs that are in the top 15 of any list
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(-0.005,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
ggMarginal(plot1)
}
# Create the 3 comparison plots for ECLIPSE, LGRC, COPDGene and combine them
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
source('~/.active-rstudio-document')
?ggExtra
getwd()
colnames(merged.data.frame)
getwd()
setwd('..')
setwd('..')
getwd()
setwd('R_work')
setwd('R_workspace')
png('eclipse_copdgene_lgrc_comparison.png', width=1800)
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
dev.off()
dim(merged.data.frame)
head(merged.data.frame)
paste(analysisNames,c("Magnitude","rankMag"), sep="_")
keepColnames <- paste(analysisNames,c("Magnitude","rankMag"), sep="_")
keepColnames <- paste(analysisNames,c("Magnitude","rankMag","dTFI.FDR"), sep="_")
keepColnames
?paste
'+'(c(1,2,3),'c(2,3,4)')
'+'(c(1,2,3),c(2,3,4))
'+'(c(1,2,3),c(2,3,4,5))
keepColnames <- paste(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), sep="_")
keepColnames
keepColnames <- combn(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"))
?combn
keepColnames <- outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), sep="_")
keepColnames <- outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_")
keepColnames
keepColnames <- c(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_"))
keepColnames
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
displayColnames
publicationTable <- merged.data.frame[,keepColnames]
colnames(publicationTable) <- displayColnames
head(publicationTable)
round(publicationTable,3)
publicationTable <- merged.data.frame[,c(1,keepColnames)]
merged.data.frame[1:5,1:5]
publicationTable <- cbind(merged.data.frame[,1], merged.data.frame[,c(1,keepColnames)])
publicationTable <- cbind(merged.data.frame[,1], merged.data.frame[,keepColnames])
colnames(publicationTable) <- c('TF',displayColnames)
round(publicationTable,3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
head(publicationTable)
publicationTable <- publicationTable[order(publicationTable[,2]),]
head(publicationTable)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
head(publicationTable)
keepColnames
keepColnames <- c(outer(c("Magnitude","rankMag","dTFI.FDR","limma..logp"),analysisNames, paste, sep="_"))
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
keepColnames
?outher
?outer
"asd"*3
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), each=3)
displayColnames
keepColnames <- c(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_"))
keepColnames
keepColnames <- c(t(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_")))
keepColnames
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
head(publicationTable)
head(as.character(publicationTable))
head(publicationTable)
publicationTable==0
publicationTable==0 <- "<.0001"
publicationTable[publicationTable==0] <- "<.0001"
head(publicationTable)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
head(publicationTable)
publicationTable[publicationTable==0] <- "<.0001"
head(publicationTable)
publicationTable[,'rank']
head(resultTables[[1]])
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma..logp <- exp(-x$limma..logp)
x
})
library(ggplot2)
library(gridExtra)
library(ggExtra)
##################################################################################################################
#  This script takes transition matrix results from multiple datasets and creates tables and plots comparing them.
#  Consolidate different results into single table
##################################################################################################################
# Specify the analysis folders and display names for the analyses
analysisNames <- c("ECLIPSE_bere_bare_55557","LGRC_bere_38678","COPDGene_bere_70856")
displayNames <- c("ECLIPSE","LGRC","COPDGene")
# Find the files for comparison
# Read them in.
# Add within-study rank order for magnitude and significance
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma..logp <- exp(-x$limma..logp)
x
})
head(resultTables[[1]])
resultTables[[1]]$limm
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-x$limma..logp)
x
})
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-x$limma)
x
})
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-(x$limma))
x
})
exp(resultTables[[1]]$limm)
exp(-resultTables[[1]]$limm)
x<-resultTables[[1]]
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
resultTables <- lapply(filenames, read.csv)
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-(x$limma))
x
})
exp(-resultTables[[1]]$limm)
x<-resultTables[[1]]
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x$limma <- exp(-(x$limma))
x$limma
colnames(x)
filenames <- dir(paste0("~/gd/Harvard/Research/TM_outputs/",analysisNames), full.names = T, recursive = TRUE, all.files = TRUE, pattern="resultTable*")
resultTables <- lapply(filenames, read.csv)
names(resultTables) <- analysisNames
resultTables <- lapply(resultTables, function(x){
x$rankSig <- 1:nrow(x)
x <- x[order(-x$Magnitude),]
x$rankMag <- 1:nrow(x)
x$limma <- exp(-(x$limma))
colnames(x) <- paste(analysisNames[parent.frame()$i], colnames(x), sep="_")
x
})
merged.data.frame = Reduce(function(...) merge(..., by=1,all=T), resultTables)
merged.data.frame <- merged.data.frame[order(merged.data.frame[,2]),]
# Function for generation of a plot based on an index pair
makeComparisonPlot <- function(pair, plotTopNTFs=15, filterColIndices = c(8,15,22)){
# Include labels for any TFs that are in the top 15 of any list
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
corText <- paste0("R^{2}==",round(cor(merged.data.frame[[paste(analysisNames[pair[1]], "Magnitude", sep="_")]], merged.data.frame[[paste(analysisNames[pair[2]], "Magnitude", sep="_")]], use="complete.obs"),4))
plot1 <- ggplot(merged.data.frame, aes_string(paste(analysisNames[pair[1]], "Magnitude", sep="_"),paste(analysisNames[pair[2]], "Magnitude", sep="_"), label="labels"))
plot1 <- plot1 + geom_point(colour="blue",alpha=.5, size=4) + xlab(displayNames[pair[1]]) + ylab(displayNames[pair[2]]) + geom_text(vjust=0)  + expand_limits(x=c(0,.025)) + annotate("text", x = .02, y = 0, label = corText, parse = TRUE)
ggMarginal(plot1)
}
# Create the 3 comparison plots for ECLIPSE, LGRC, COPDGene and combine them
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
# Generate the png for the above plots
png('eclipse_copdgene_lgrc_comparison.png', width=1800)
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
dev.off()
# Create table
keepColnames <- c(t(outer(analysisNames,c("Magnitude","rankMag","dTFI.FDR","limma..logp"), paste, sep="_")))
displayColnames <- rep(c("Magnitude","rank","FDR","LIMMA"), 3)
publicationTable <- cbind(merged.data.frame[,1], round(merged.data.frame[,keepColnames],4))
colnames(publicationTable) <- c('TF',displayColnames)
publicationTable <- publicationTable[order(-publicationTable[,2]),]
publicationTable[publicationTable==0] <- "<.0001"
head(publicationTable)
plot1 <- makeComparisonPlot(c(1,2))
plot1
plot2 <- makeComparisonPlot(c(2,3))
plot2
plotTopNTFs=15
filterColIndices = c(8,15,22)
pair <-2:3
includedLabels <- apply(merged.data.frame[,filterColIndices[pair]],1,function(...) suppressWarnings(min(...,na.rm=T))) < plotTopNTFs
includedLabels
merged.data.frame$labels <- as.character(merged.data.frame[,1])
merged.data.frame$labels[!includedLabels] <- ""
merged.data.frame$labels
head(filterColIndices)
colnames(merged.data.frame)
source('~/.active-rstudio-document')
plot1 <- makeComparisonPlot(c(1,2))
plot2 <- makeComparisonPlot(c(2,3))
plot3 <- makeComparisonPlot(c(3,1))
suppressWarnings(grid.arrange(plot1, plot2, plot3, ncol=3, top="Comparison of Differential TF Involvement Across Studies"))
library(knitr)
source('~/gd/Harvard/Research/R_workspace/consolidateResultTables.R')
file.edit(“.Rprofile”)
file.edit(".Rprofile")
?RPubs
publish(title = 'mytitle', 'index.html', host = 'rpubs')
