tkn <- rep(F,100)
tkn[sample(100,1)] <-T
stsInterval <- matrix(NA, nrow=100, ncol=100)
stsInterval[,1] <- tkn
for(i in 2:100) {
if(tkn[i]){
tkn[sample(which(!tkn),1)]<-T
}else{
tkn[i]<-T
}
stsInterval[,i] <- tkn
}
stsInterval
length(c(stsInterval))
c(stsInterval)[1:10]
c(stsInterval)[1:100]
?rep
df <- data.frame(time=rep(1:100, times=100), seats=c(stsInterval)[1:100])
dim(df)
head(df)
df <- data.frame(time=rep(1:100, each=100), seats=c(stsInterval)[1:100])
head(df)
rnorm(1000)
head(df)
p <- ggplot(df, aes(seats, frame = time))
p
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), taken=c(stsInterval)[1:100])
p <- ggplot(df, aes(seats, taken, frame = time))
p
dim(df)
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), taken=c(stsInterval))
p <- ggplot(df, aes(seats, taken, frame = time))
p
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), taken=as.numeric(c(stsInterval)))
p <- ggplot(df, aes(seats, taken, frame = time))
p
gg_animate(p, interval = .2)
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), taken=c(stsInterval))
p <- ggplot(df, aes(seats, taken, frame = time))
p <- ggplot(df, aes(seats, taken, frame = time)) + geom_bar()
p
p <- ggplot(df, aes(x=seats, y=taken, frame = time)) + geom_bar()
p
p <- ggplot(df, aes(x=seats, y=taken, frame = time)) + geom_bar(stat = taken)
p <- ggplot(df, aes(x=seats, y=taken, frame = time)) + geom_bar(stat = "identity")
p
gg_animate(p, interval = .2)
gg_animate(p, interval = .1)
head(df)
p
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), taken=as.numeric(c(stsInterval)))
p <- ggplot(df, aes(x=seats, y=taken, frame = time)) + geom_bar(stat = "identity")
p
gg_animate(p, interval = .1)
p <- ggplot(df, aes(x=seats, y=taken, frame = time), col="blue") + geom_bar(stat = "identity") +theme_bw()
p
tail(df)
p <- ggplot(df, aes(x=seats, y=taken, frame = time), col="blue") + geom_bar(aes(weight = taken)) +theme_bw()
p
gg_animate(p, interval = .1)
p <- ggplot(df[1:100,], aes(x=seats, y=taken, frame = time), col="blue") + geom_bar(aes(weight = taken)) +theme_bw()
p
p <- ggplot(df[1:100,], aes(x=seats, y=taken, frame = time), col="blue") + geom_bar(stat = "identity") +theme_bw()
p
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), taken=c(stsInterval))
p <- ggplot(df[1:100,], aes(x=seats, y=taken, frame = time), col="blue") + geom_bar(stat = "identity") +theme_bw()
p
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), taken=c(stsInterval))
head(df)
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
head(df)
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = rescale), colour = "white") + scale_fill_gradient(low = "white", high = "steelblue")
p
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken), colour = "white") + scale_fill_gradient(low = "white", high = "steelblue")
p
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken), colour = "white")
p
p <- ggplot(df[1:100,], aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken), colour = "white")
p
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken), colour = "white")
gg_animate(p, interval = .1)
stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken), colour = "white") +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
jerk <- sample(100,1)
st <- 1:100
tkn <- rep(F,100)
jerk <- sample(100,1)
tkn[jerk] <-T
stsInterval <- matrix(NA, nrow=100, ncol=100)
stsInterval[,1] <- tkn
incorrectSeats <- tkn
for(i in 2:100) {
if(tkn[i]){
incorrectSeat <- sample(which(!tkn),1)
tkn[incorrectSeat]<-T
incorrectSeats[incorrectSeat] <- T
}else{
tkn[i]<-T
}
stsInterval[,i] <- tkn
}
incorrectSeats
sum(incorrectSeats)
st <- 1:100
tkn <- rep(F,100)
jerk <- sample(100,1)
tkn[jerk] <-T
stsInterval <- matrix(NA, nrow=100, ncol=100)
stsInterval[,1] <- tkn
incorrectSeats <- matrix(NA, nrow=100, ncol=100)
incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]){
incorrectSeat <- sample(which(!tkn),1)
tkn[incorrectSeat]<-T
incorrectSeats[,i] <- incorrectSeats[,i-1]
incorrectSeats[incorrectSeat,i] <- T
}else{
tkn[i]<-T
}
stsInterval[,i] <- tkn
incorrectSeats[,i] <- incorrectSeats[,i-1]
}
incorrectSeats
incorrectSeats[,1]
incorrectSeats[,50]
incorrectSeats[,60]
incorrectSeats[,70]
st <- 1:100
tkn <- rep(F,100)
jerk <- sample(100,1)
tkn[jerk] <-T
stsInterval <- matrix(NA, nrow=100, ncol=100)
stsInterval[,1] <- tkn
incorrectSeats <- matrix(NA, nrow=100, ncol=100)
incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]){
incorrectSeat <- sample(which(!tkn),1)
tkn[incorrectSeat]<-T
incorrectSeats[,i] <- incorrectSeats[,i-1]
incorrectSeats[incorrectSeat,i] <- T
}else{
tkn[i]<-T
}
stsInterval[,i] <- tkn
incorrectSeats[,i] <- incorrectSeats[,i-1]
}
incorrectSeats[,1]
st <- 1:100
tkn <- rep(F,100)
jerk <- sample(100,1)
tkn[jerk] <-T
stsInterval <- matrix(NA, nrow=100, ncol=100)
stsInterval[,1] <- tkn
incorrectSeats <- matrix(NA, nrow=100, ncol=100)
incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]){
incorrectSeat <- sample(which(!tkn),1)
tkn[incorrectSeat]<-T
incorrectSeats[,i] <- incorrectSeats[,i-1]
incorrectSeats[incorrectSeat,i] <- T
}else{
tkn[i]<-T
}
stsInterval[,i] <- tkn
incorrectSeats[,i] <- incorrectSeats[,i-1]
}
incorrectSeats[,1]
incorrectSeats[,50]
incorrectSeats[,24]
st <- 1:100
tkn <- rep(F,100)
jerk <- sample(100,1)
tkn[jerk] <-T
stsInterval <- matrix(NA, nrow=100, ncol=100)
stsInterval[,1] <- tkn
incorrectSeats <- matrix(NA, nrow=100, ncol=100)
incorrectSeats[,1] <- tkn
for(i in 2:100) {
incorrectSeats[,i] <- incorrectSeats[,i-1]
if(tkn[i]){
incorrectSeat <- sample(which(!tkn),1)
tkn[incorrectSeat]<-T
incorrectSeats[incorrectSeat,i] <- T
}else{
tkn[i]<-T
}
stsInterval[,i] <- tkn
}
incorrectSeats[,24]
incorrectSeats[,90]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval), incorrect=c(incorrectSeats))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
st <- 1:100
tkn <- rep(0,100)
jerk <- sample(100,1)
tkn[jerk] <- 0
stsInterval <- matrix(0, nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:100) {
#   incorrectSeats[,i] <- incorrectSeats[,i-1]
if(tkn[i]>0){
incorrectSeat <- sample(which(!tkn),1)
tkn[incorrectSeat]<-2
#     incorrectSeats[incorrectSeat,i] <- T
}else{
tkn[i]<-1
}
stsInterval[,i] <- tkn
}
stsInterval <- stsInterval[sample(1:100),]
stsInterval[1:5,1:5]
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:100) {
#   incorrectSeats[,i] <- incorrectSeats[,i-1]
if(tkn[i]=="Empty"){
incorrectSeat <- sample(which(!tkn),1)
tkn[incorrectSeat]<-"Incorrect Seat"
#     incorrectSeats[incorrectSeat,i] <- T
}else{
tkn[i]<-"Correct Seat"
}
stsInterval[,i] <- tkn
}
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]=="Empty"){
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}else{
tkn[i]<-"Correct Seat"
}
stsInterval[,i] <- tkn
}
stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
head(df)
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]=="Empty"){
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}else{
tkn[i]<-"Correct Seat"
}
stsInterval[,i] <- tkn
}
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
library(ggplot2)
library(gganimate)
library(tidyr)
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]=="Empty"){
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}else{
tkn[i]<-"Correct Seat"
}
stsInterval[,i] <- tkn
}
# stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
library(ggplot2)
library(gganimate)
library(tidyr)
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]!="Empty"){
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}else{
tkn[i]<-"Correct Seat"
}
stsInterval[,i] <- tkn
}
# stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:100) {
if(tkn[i]=="Empty"){
tkn[i]<-"Correct Seat"
}else{
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}
stsInterval[,i] <- tkn
}
# stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row")
gg_animate(p, interval = .1)
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:99) {
if(tkn[i]=="Empty"){
tkn[i]<-"Correct Seat"
}else{
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}
stsInterval[,i] <- tkn
}
# Get last available seat
tkn[which(tkn=="Empty")]<-"You"
stsInterval[,100]<- tkn
# stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row") + theme_bw()
gg_animate(p, interval = .1)
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:99) {
if(tkn[i]=="Empty"){
tkn[i]<-"Correct Seat"
}else{
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}
stsInterval[,i] <- tkn
}
# Get last available seat
tkn[which(tkn=="Empty")]<-"You"
stsInterval[,100]<- tkn
stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row") + theme_bw()
gg_animate(p, interval = .1)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "README/README-fig-",
cache.path = "README/README-cache-"
)
getwd()
gg_animate_save(p, "seating.gif", interval = .1)
gg_animate_save(p, "./seating.gif", interval = .1)
?gg_animate_save
gga <- gg_animate(p, "./seating.gif", interval = .1)
gg_animate_save(gga, "./seating.gif")
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:99) {
if(tkn[i]=="Empty"){
tkn[i]<-"Correct Seat"
}else{
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}
stsInterval[,i] <- tkn
}
# Get last available seat
tkn[which(tkn=="Empty")]<-"You"
stsInterval[,100]<- tkn
# stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row") + theme_bw()
gga <- gg_animate(p, interval = .1)
gg_animate_save(gga, "./seating_ordered.gif")
library(animation)
ani.options(autobrowse = FALSE, interval = 1)
opts_knit$set(animation.fun = function(x, options, format = "gif") {
x = c(knitr:::sans_ext(x), knitr:::file_ext(x))
fig.num = options$fig.num
format = sub("^[.]", "", format)
fig.fname = paste0(sub(paste0(fig.num, "$"), "*", x[1]),
".", x[2])
mov.fname = paste0(sub(paste0(fig.num, "$"), "", x[1]), ".",
format)
# order correctly
figs <- Sys.glob(fig.fname)
figs <- figs[order(as.numeric(stringr::str_match(figs, paste0("(\\d+)\\.", x[2]))[, 2]))]
animation::im.convert(figs, output = mov.fname)
sprintf("![%s](%s)", options$label, paste0(opts_knit$get("base.url"), mov.fname))
})
opts_chunk$set(cache = TRUE, message = FALSE, warning = FALSE, fig.show = "animate")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "README/README-fig-",
cache.path = "README/README-cache-"
)
library(knitr)
# I want the README to have visible GIFs on GitHub, as
# GitHub cannot show .mp4s or other animation formats.
# I therefore hacked together a GIF animation hook for knitr.
library(animation)
ani.options(autobrowse = FALSE, interval = 1)
opts_knit$set(animation.fun = function(x, options, format = "gif") {
x = c(knitr:::sans_ext(x), knitr:::file_ext(x))
fig.num = options$fig.num
format = sub("^[.]", "", format)
fig.fname = paste0(sub(paste0(fig.num, "$"), "*", x[1]),
".", x[2])
mov.fname = paste0(sub(paste0(fig.num, "$"), "", x[1]), ".",
format)
# order correctly
figs <- Sys.glob(fig.fname)
figs <- figs[order(as.numeric(stringr::str_match(figs, paste0("(\\d+)\\.", x[2]))[, 2]))]
animation::im.convert(figs, output = mov.fname)
sprintf("![%s](%s)", options$label, paste0(opts_knit$get("base.url"), mov.fname))
})
opts_chunk$set(cache = TRUE, message = FALSE, warning = FALSE, fig.show = "animate")
st <- 1:100
tkn <- rep("Empty",100)
jerk <- sample(100,1)
tkn[jerk] <- "Jerk"
stsInterval <- matrix("Empty", nrow=100, ncol=100)
stsInterval[,1] <- tkn
# incorrectSeats <- matrix(NA, nrow=100, ncol=100)
# incorrectSeats[,1] <- tkn
for(i in 2:99) {
if(tkn[i]=="Empty"){
tkn[i]<-"Correct Seat"
}else{
incorrectSeat <- sample(which(tkn=="Empty"),1)
tkn[incorrectSeat]<-"Incorrect Seat"
}
stsInterval[,i] <- tkn
}
# Get last available seat
tkn[which(tkn=="Empty")]<-"You"
stsInterval[,100]<- tkn
# stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") + geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row") + theme_bw()
gga <- gg_animate(p, interval = .01)
gg_animate(gga, "./seating_ordered.gif")
stsInterval <- stsInterval[sample(1:100),]
df <- data.frame(time=rep(1:100, each=100), seats=rep(1:100,100), row=rep(1:25,each=4), col=1:4, taken=c(stsInterval))
p <- ggplot(df, aes(x=col, y=row, frame = time), col="blue") +
geom_tile(aes(fill = taken)) +xlab("Seat") +ylab("Row") + theme_bw()+
scale_fill_brewer(palette="Set1")
gg_animate(p, "./seating_unordered.gif", interval = c(rep(.1,99),1)
)
