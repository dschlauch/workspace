{
    "contents" : "library(bereR)\nlibrary(pandaR)\nlibrary(bptools)\n\nlibrary(penalized)\n\ncopd.filename <- \"null.networks_all.rds\"\neclipse.filename <- \"eclipse.networks.rds\"\nlocal.wd <- \"~/gd/Harvard/Research/\"\ndata.dir  <- \"./data/Eclipse/\"\nsetwd(local.wd)\nsetwd(data.dir)\n\n\n\n######################################################\n##      Data Loading from ECLIPSE dataset          ###\n##                                                 ###\n######################################################\neclipse <- list()\neclipse$motif    <- read.table(\"ECLIPSE_Blood_Motif.txt\",header=F)\neclipse$exp      <- read.table(\"ECLIPSE_Blood_Exp.txt\",row.names=1,header=T)\neclipse$ppi      <- read.table(\"OV_PPI.txt\",header=F)\neclipse$clinical <- read.table(\"ECLIPSE_blood.txt\",header=T,fill = TRUE, sep=\"\\t\",row.names=1)\neclipse$exp      <- eclipse$exp[,order(colnames(eclipse$exp))]  # Make sure expression and clinical is in same order\neclipse$clinical <- eclipse$clinical[colnames(eclipse$exp),]    # Make sure clinical only contains patients with expression data\n\n# Specify the group partition\nfilter.vec.1 <- eclipse$clinical$Subject.type==\"COPD Subjects\"\nfilter.vec.2 <- eclipse$clinical$Subject.type==\"Smoker Controls\"\n\n\n\n######################################################\n##  Running null networks with improved algorithm  ###\n##                 2/25/15    START                ###\n######################################################\neclipse$COPD.network <- bere(eclipse$motif,eclipse$exp[,filter.vec.1], cpp=F)\neclipse$SmCo.network <- bere(eclipse$motif,eclipse$exp[,filter.vec.2], cpp=F)\n\nbereScores1 <- bereFull(eclipse$motif,eclipse$exp[,filter.vec.1])\nbereScores2 <- bereFull(eclipse$motif,eclipse$exp[,filter.vec.2])\n\n# Copy expression data for null network generation\nnull.exp <- eclipse$exp\n\n#Parallel stuff\nlibrary(foreach)\nlibrary(doParallel)\n\ncl<-makeCluster(2)\nregisterDoParallel(cl)\n\n#start time\nstrt<-Sys.time()\niters <- 61\n#loop\nnull.networks<-foreach(icount(iters),.packages=\"bereR\") %dopar% {\n\nrownames(null.exp) <- rownames(null.exp)[sample(1:nrow(null.exp))]\nres1 <- bere(eclipse$motif,null.exp[,filter.vec.1],cpp=F)\nres2 <- bere(eclipse$motif,null.exp[,filter.vec.2],cpp=F)\nlist(res1,res2) \n}\n\nprint(Sys.time()-strt)\nstopCluster(cl)\n  \n  \n  \n  # Add new null permutations to existing list if any\n  # This step is to allow for skipping the above step and starting with a stored null set\n# if (file.exists(copd.filename)){\n# null.networks <- append(null.networks, readRDS(\"null.networks_all.rds\"))\n# }\n\n# Save the observed and null networks (as separate files)\n#saveRDS(eclipse,eclipse.filename)\nsaveRDS(null.networks,copd.filename)\n\n#####################################################\n# START HERE TO SKIP PERMUTATIONS.\n#####################################################\n\nnull.networks  <-  readRDS(copd.filename)\neclipse        <-  readRDS(eclipse.filename)\n\n#####################################################\n###  TF analysis\n#####################################################\n\n# Calculate the transformation matrix for the observed data\ntm.observed <- transformation.matrix(eclipse$COPD.network, eclipse$SmCo.network,remove.diagonal=T,method=\"ols\")\n\n\n# Calculate the transformation matrix for the null data\ntm.null <- lapply(null.networks, function(x){\n  transformation.matrix(x[[1]],x[[2]],method=\"ols\",remove.diagonal = T)\n})\n\n# Do the sum of sq ODM plot versus null\nssodm.plot(tm.observed, tm.null,plot.title=\"SSODM observed and null, COPD subjects vs Smoker control (R)\")\nssodm.plot(tm.observed, tm.null, rescale=T, plot.title=\"SSODM observed and null, COPD subjects vs Smoker control (R)\")\n\n#####################################################\n### Gene Analysis\n#####################################################\n# Calculate the transformation matrix for the observed data\ntm.observed.genes <- transformation.matrix(eclipse$COPD.network, eclipse$SmCo.network,remove.diagonal=T,method=\"old\",by.tfs=T,standardize=F)\n\n\n# Calculate the transformation matrix for the null data\ntm.null.genes <- lapply(null.networks, function(x){\n  transformation.matrix(x[[1]],x[[2]],method=\"old\",standardize=F)\n})\n\n# Do the sum of sq ODM plot versus null\nssodm.plot(tm.observed, tm.null,plot.title=\"SSODM observed and null, COPD subjects vs Smoker control (R)\")\nssodm.plot(tm.observed, tm.null, rescale=T, plot.title=\"SSODM observed and null, COPD subjects vs Smoker control (R)\",highlight.tfs = c(\"ELK1\",\"E2F4\"))\n\n\n\n######################################################\n##  Running null networks with improved algorithm  ###\n##                 2/25/15      END                ###\n######################################################\n# \n\ncppFunction('NumericMatrix correl(NumericMatrix x) {\n  int nrow = x.nrow(), ncol = x.ncol();\n  NumericMatrix resultMatrix(nrow,nrow);\n  for (int i = 0; i < nrow; i++) {\n    for (int j = i; j < nrow; j++) {\n      double sumproduct = 0;\n      for (int k = 0; k < ncol; k++){\n        sumproduct+=x(i,k)*x(j,k);\n      }\n      resultMatrix(i,j) = sumproduct/(nrow-1);\n      resultMatrix(j,i) = sumproduct/(nrow-1);\n    }\n  }\n  return resultMatrix;\n}')\n\ncppFunction('double squarert(double x){\n  return sqrt(x);\n            }')\nset.seed(1014)\nrandmat <- t(matrix(rnorm(30000*50), 50))\nt(apply(randmat, 1, function(x)(x-mean(x))/(sd(x))))\n\nsystem.time(correl(t(apply(randmat, 1, function(x)(x-mean(x))/(sd(x))))))\nsystem.time(cor(t(randmat)))\n#>  [1] 458 558 488 458 536 537 488 491 508 528\nrowSumsC(x)\n#>  [1] 458 558 488 458 536 537 488 491 508 528\n\n\n## Gene expression analysis\nlibrary(limma)\n?lmFit\ndesign <- cbind(1,as.numeric(!filter.vec.1))\ndimnames(design) <- list(colnames(eclipse$exp), c(\"COPD\",\"SMOKER\"))\ndesign <- model.matrix(~factor(filter.vec.1))\ndiff.exp.res <- lmFit(eclipse$exp, design)\ndiff.exp.res <- ebayes(diff.exp.res)\ndiff.exp.res$p.value[order(diff.exp.res$p.value[,2])['ELK1'],]\n\nsetwd(prev.wd)\n\n\nlibrary(igraph)\n# Visualize networks\nnet.triple <- eclipse$ppi\nnet.triple <- melt(top.binary)\ng <- graph.data.frame(net.triple[net.triple[,3]==1,], directed=F)\nV(g)$color<-ifelse(V(g)$name%in%suspects, 'blue', 'red')\nl <- layout.fruchterman.reingold(g,niter=3,area=vcount(g)^2.3,repulserad=vcount(g)^5.8)\nplot(g,layout=l)\n\ng <- graph.data.frame(eclipse$motif[eclipse$motif$V1%in%c(suspects,'ELK1'),], directed=F,types=rep(0:1,590))\nV(g)$color<-ifelse(V(g)$name%in%suspects, 'blue', 'red')\nl <- layout.bipartite (g, types = NULL, hgap = 10, vgap = 1, maxiter = 100) \nplot(g,layout=l)\n\ndata <- eclipse$motif[eclipse$motif$V2%in%c(suspects,'ELK1','STAT3'),]\ninc <- spread(data,V2,V3,fill=0)\nrownames(inc) <- inc[,1]\ninc<-inc[,-1]\ng <- graph.incidence(top.binary)\nE(g)$color<-ifelse(E(g)$grade==9, \"red\", \"grey\")\nplot(g, layout=layout.bipartite,\n     vertex.color=c(\"green\",\"cyan\")[V(g)$type+1])\n\n\n# correlation matrix\ngenes <- unique(eclipse$motif[,1])\nheatmap.2(cor(t(eclipse$exp[genes,])), dendrogram = \"both\", col=bluered, trace='none',cexCol=1.3,cexRow=1.3,margins=c(12,20))\n\n\n\n# Strangely behaving TFs (because no motif data exists for these TFs)\n# Note 2/26/15  These should be filtered out of the analysis in this version of PandaR\nsuspects <- c('HIF1A',\n              'HAND1',\n              'ARID3A',\n              'SOX5',\n              'PRRX2',\n              'NR1H2',\n              'POU5F1',\n              'VDR',\n              'NFE2L1',\n              'NKX3-1',\n              'MAFG',\n              'AHR',\n              'SOX10',\n              'DDIT3',\n              'TAL1',\n              'EWSR1',\n              'NFIC',\n              'TLX1',\n              'ARNT'\n)\n\n\n#################################\n###  Genes approach\n##################################\n\nobs.s  <- apply(eclipse$SmCo.network-eclipse$COPD.network,2,function(x){x%*%x})\nnull.s <- lapply(null.networks, function(nullnet){\n  apply(nullnet[[1]]-nullnet[[2]],2,function(x){x%*%x})\n})\n",
    "created" : 1437586360638.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2712227515",
    "id" : "1B888D0",
    "lastKnownWriteTime" : 1437673498,
    "path" : "~/gd/Harvard/Research/R_workspace/COPD_analysis.R",
    "project_path" : "COPD_analysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}